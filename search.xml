<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git 最著名报错&quot;Permission to XXX.git&quot;解决方案</title>
      <link href="/2022/10/13/Git%E6%9C%80%E8%91%97%E5%90%8D%E6%8A%A5%E9%94%99%E2%80%9CERROR%20Permission%20to%20XXX.git%20denied%20to%20user%E2%80%9D%E7%BB%88%E6%9E%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2022/10/13/Git%E6%9C%80%E8%91%97%E5%90%8D%E6%8A%A5%E9%94%99%E2%80%9CERROR%20Permission%20to%20XXX.git%20denied%20to%20user%E2%80%9D%E7%BB%88%E6%9E%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-最著名报错-“ERROR-Permission-to-XXX-git-denied-to-user”终极解决方案"><a href="#Git-最著名报错-“ERROR-Permission-to-XXX-git-denied-to-user”终极解决方案" class="headerlink" title="Git 最著名报错 “ERROR: Permission to XXX.git denied to user”终极解决方案"></a>Git 最著名报错 “ERROR: Permission to XXX.git denied to user”终极解决方案</h1><p> # <strong>from <a href="https://www.jianshu.com/u/2fb5eb10b299">穿山甲到底说了什么</a> 转载, 待处理</strong></p><span id="more"></span><p>今天和同事在弄github的时候，遇到了点小麻烦，在全球最大的中文网上一搜，果然不出所料，找不到写解决方案，于是自己在stackOverFlower上看了好几篇，总结了一下，终于找到解决方案！报错如下：<br><em><code>ERROR: Permission to hbxn740150254/BestoneGitHub.git denied to Chenzuohehe. fatal: Could not read from remote repository.Please make sure you have the correct access rights and the repository exists.</code></em><br>初看知道大概是没有权限，导致不能从远程仓库读取，后来询问才知道我同事的电脑的SSH公钥已经绑定了他自己的GitHub 账号，我就不能再用他的公钥了，具体的请看stackoverflow网友所说的：<br><em><code>GitHub will use the key as means to identify you when you connect to them via SSH. As such, you cannot have multiple accounts with the same key, as GitHub won’t be able to tell then which of your accounts you want to use.</code></em><br>上面说的话很清楚，就是你不能有多个账号添加了同一个公钥，一旦那样github就不能区分到底是哪个用户在安全登陆网站，那安全登录就起不到任何效果了，因为你能登进去，我也能登进去，那服务器到底判断是谁登了呢！但是要注意一个账号可以拥有多个公钥，这个是可以允许的！比如，在A电脑和B电脑上的公钥都绑定了同个一个账户Tom，那么两台电脑在终端上输入<code>ssh -T git@github.com</code>最后都会显示<br><code>Hi Tom! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code><br>服务器依然会知道这是Tom的第二台电脑在登陆，他是土豪，账号依然很安全！</p><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>下面再举个例子，Tom在公司有个公司账户publicAccount，然后回到家他也有自己创建私人的账号privateAccount，但是他只有一台电脑，意味着一般情况下，他要么用公司账户绑定电脑公钥，要么用家里私人账号绑定，但是不管哪一种绑定，最后都达不到这两个账号访问同一个远程仓库，那么协同开发也就成了泡沫！因为只有一台电脑，如果Tom试图访问没有绑定公钥的账户的时候，就会报错<code>ERROR: Permission to hbxn740150254/BestoneGitHub.git denied to Tom</code></p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><ul><li><h4 id="买台新电脑，获得新公钥，这是最土豪也是最傻的方法"><a href="#买台新电脑，获得新公钥，这是最土豪也是最傻的方法" class="headerlink" title="买台新电脑，获得新公钥，这是最土豪也是最傻的方法"></a>买台新电脑，获得新公钥，这是最土豪也是最傻的方法</h4></li><li><h4 id="利用自己唯一的电脑生成多公钥，公钥一多，不就可以想绑定多少个都行了吗，不怕你把它玩坏😂😂😂"><a href="#利用自己唯一的电脑生成多公钥，公钥一多，不就可以想绑定多少个都行了吗，不怕你把它玩坏😂😂😂" class="headerlink" title="利用自己唯一的电脑生成多公钥，公钥一多，不就可以想绑定多少个都行了吗，不怕你把它玩坏😂😂😂"></a>利用自己唯一的电脑生成多公钥，公钥一多，不就可以想绑定多少个都行了吗，不怕你把它玩坏😂😂😂</h4></li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li><h4 id="1、生成一个新的SSH-KEY"><a href="#1、生成一个新的SSH-KEY" class="headerlink" title="1、生成一个新的SSH KEY"></a>1、生成一个新的SSH KEY</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs csharp">AppledeiMac:~ Apple$ cd ~/.ssh<br>AppledeiMac:.ssh Apple$ ls<br>id_rsa        id_rsa.pub  known_hosts<br>AppledeiMac:.ssh Apple$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;iMac_personnal_publicKey&quot;</span><br>Generating <span class="hljs-keyword">public</span>/<span class="hljs-keyword">private</span> rsa key pair.<br><span class="hljs-function">Enter file <span class="hljs-keyword">in</span> which to save the <span class="hljs-title">key</span> (<span class="hljs-params">/Users/Apple/.ssh/id_rsa</span>):               </span><br><span class="hljs-function">/Users/Apple/.ssh/id_rsa_personal</span><br><span class="hljs-function">Enter <span class="hljs-title">passphrase</span> (<span class="hljs-params">empty <span class="hljs-keyword">for</span> no passphrase</span>): </span><br><span class="hljs-function">Enter same passphrase again: </span><br><span class="hljs-function">Your identification has been saved <span class="hljs-keyword">in</span> /Users/Apple/.ssh/id_rsa_personal.</span><br><span class="hljs-function">Your <span class="hljs-keyword">public</span> key has been saved <span class="hljs-keyword">in</span> /Users/Apple/.ssh/id_rsa_personal.pub.</span><br><span class="hljs-function">The key fingerprint <span class="hljs-keyword">is</span>:</span><br><span class="hljs-function">SHA256:1gepuxDHwJRnFbKvc0Zq/NGrFGE9kEXS06jxatPPrSQ iMac_personnal_publicKey</span><br><span class="hljs-function">The key&#x27;s randomart image <span class="hljs-keyword">is</span>:</span><br><span class="hljs-function">+---[RSA 2048]----+</span><br><span class="hljs-function">|      ....</span>=*oo   |<br>|     o. ooo=+ .  |<br>|      oo. =+o.   |<br>|       o =.o..   |<br>|      . S =o.    |<br>|       = =++.    |<br>|      . B.=.Eo.. |<br>|       o B . +o .|<br>|          . o.. .. |<br>+----[SHA256]-----+<br>AppledeiMac:.ssh Apple$ ls<br>id_rsa            id_rsa_personal     known_hosts<br>id_rsa.pub        id_rsa_personal.pub`<br></code></pre></td></tr></table></figure></li><li><h4 id="2、打开新生成的-x2F-ssh-x2F-id-rsa2-pub文件，将里面的内容添加到GitHub后台。"><a href="#2、打开新生成的-x2F-ssh-x2F-id-rsa2-pub文件，将里面的内容添加到GitHub后台。" class="headerlink" title="2、打开新生成的~&#x2F;.ssh&#x2F;id_rsa2.pub文件，将里面的内容添加到GitHub后台。"></a>2、打开新生成的~&#x2F;.ssh&#x2F;id_rsa2.pub文件，将里面的内容添加到GitHub后台。</h4></li><li><h4 id="3、打开-x2F-ssh-x2F-config文件"><a href="#3、打开-x2F-ssh-x2F-config文件" class="headerlink" title="3、打开~&#x2F;.ssh&#x2F;config文件"></a>3、打开~&#x2F;.ssh&#x2F;config文件</h4></li></ul><p>没有config文件则创建，终端输入touch config ，创建完以后用Vim打开或者是在Finder打开一样。<br>在不影响默认的github设置下我们重新添加一个Host：<br>建一个自己能辨识的github别名，我取的是github-personal，新建的帐号使用这个别名做克隆和更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">Host github-personal<br></code></pre></td></tr></table></figure><p>HostName github.com<br>User git<br>IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_personal</p><p>编辑完毕之后按下ESC，:wq，:wq是保存并退出vim编辑器<br>具体在终端代码如下：<br>cat config 是把config文件里面的内容在终端输出<br>AppledeiMac:.ssh Apple$ vim config<br>AppledeiMac:.ssh Apple$ cat config</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#Default GitHub</span><br>Host github.com<br>HostName github.com<br>User git<br>IdentityFile ~<span class="hljs-regexp">/.ssh/id</span>_rsa<br><br>Host github-personal<br>HostName github.com<br>User git<br>IdentityFile ~<span class="hljs-regexp">/.ssh/id</span>_rsa_personal<br></code></pre></td></tr></table></figure><ul><li><h4 id="4、将GitHub-SSH仓库地址中的git-github-com替换成新建的Host别名。"><a href="#4、将GitHub-SSH仓库地址中的git-github-com替换成新建的Host别名。" class="headerlink" title="4、将GitHub SSH仓库地址中的git@github.com替换成新建的Host别名。"></a>4、将GitHub SSH仓库地址中的<a href="https://link.jianshu.com/?t=mailto:git@github.com">git@github.com</a>替换成新建的Host别名。</h4></li></ul><p>如原地址是 <code>git@github.com:hbxn740150254/BestoneGitHub.git</code> 替换后应该是：<code>github-personal:hbxn740150254/BestoneGitHub.git</code> 或者<code>git@github-personal:hbxn740150254/BestoneGitHub.git</code>亲测都是可以的，<br>如果是新建的仓库，直接使用替换后的URL克隆即可。如果已经使用原地址克隆过了，可以使用命令修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">AppledeiMac:.ssh Apple$ cd /Users/Apple/Desktop/BestoneDemo <br>//修改之前<br>Apple$ git remote -v<br>github  git@github.com:hbxn740150254/BestoneGitHub.git (fetch)<br>github  git@github.com:hbxn740150254/BestoneGitHub.git (push)<br>//修改 remote <span class="hljs-built_in">set</span>-url<br>AppledeiMac:BestoneDemo Apple$ git remote <span class="hljs-built_in">set</span>-url github  github- personal:hbxn740150254/BestoneGitHub.git<br>//验证是否修改成功    <br>//使用修改后的github-personal SSH连接，连接成功用户是hbxn740150254，此时公钥是id_rsa_personal<br>AppledeiMac:BestoneDemo Apple$ ssh -T github-personal<br>Hi hbxn740150254! Yo<span class="hljs-string">u&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="hljs-string">//使用默认的git@github.com SSH去连接,连接成功用户是FaxeXian，此时公钥是id_rsa</span><br><span class="hljs-string">AppledeiMac:.ssh Apple$ ssh -T git@github.com</span><br><span class="hljs-string">Hi FaxeXian! You&#x27;</span>ve successfully authenticated, but GitHub does <span class="hljs-keyword">not</span> provide shell access.<br>//修改之后<br>AppledeiMac:BestoneDemo Apple$ git remote -v<br>github  github-personal:hbxn740150254/BestoneGitHub.git (fetch)<br>github  github-personal:hbxn740150254/BestoneGitHub.git (push)<br></code></pre></td></tr></table></figure><p>最后我们进行正常的push，fetch 操作，都可以</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//更改后的github push成功！</span><br>AppledeiMac:BestoneDemo Apple$ git push github testMerge:master<br>Total <span class="hljs-number">0</span> (delta <span class="hljs-number">0</span>), reused <span class="hljs-number">0</span> (delta <span class="hljs-number">0</span>)<br>To github-personal:hbxn740150254/BestoneGitHub.git<br> cd773e9..f622210  testMerge -&gt; master<br><br><span class="hljs-comment">//github默认的节点origin我们也可以正常push操作</span><br>AppledeiMac:BestoneDemo Apple$ git push origin testMerge:testMerge<br>Counting objects: <span class="hljs-number">460</span>, done.<br>Delta compression <span class="hljs-keyword">using</span> up to <span class="hljs-number">4</span> threads.<br>Compressing objects: <span class="hljs-number">100</span>% (<span class="hljs-number">240</span>/<span class="hljs-number">240</span>), done.<br>Writing objects: <span class="hljs-number">100</span>% (<span class="hljs-number">460</span>/<span class="hljs-number">460</span>), <span class="hljs-number">16.69</span> MiB | <span class="hljs-number">442.00</span> KiB/s, done.<br>Total <span class="hljs-number">460</span> (delta <span class="hljs-number">211</span>), reused <span class="hljs-number">453</span> (delta <span class="hljs-number">205</span>)<br>To git@git.coding.net:hbxn740150254/Local-Git.git<br>* [<span class="hljs-keyword">new</span> branch]      testMerge -&gt; testMerge<br></code></pre></td></tr></table></figure><h2 id="github账户如果还是显示之前id-rsa密钥账户的话请把你的密钥加入sshAgent代理中"><a href="#github账户如果还是显示之前id-rsa密钥账户的话请把你的密钥加入sshAgent代理中" class="headerlink" title="github账户如果还是显示之前id_rsa密钥账户的话请把你的密钥加入sshAgent代理中"></a>github账户如果还是显示之前id_rsa密钥账户的话请把你的密钥加入sshAgent代理中</h2><ul><li><h4 id="添加你的ssh密钥到ssh-agent中"><a href="#添加你的ssh密钥到ssh-agent中" class="headerlink" title="添加你的ssh密钥到ssh-agent中"></a>添加你的ssh密钥到ssh-agent中</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># start the ssh-agent in the background</span><br><span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(ssh-agent -s)</span>&quot;</span><br>Agent pid 59566<br></code></pre></td></tr></table></figure></li><li><h5 id="如果你的密钥不是系统默认的RSA文件名id-rsa，比如像我一样另外创了一对公钥-x2F-密钥id-rsa-personal，那么就把他们添加进去，注意：密钥文件是不带扩展名的，公钥扩展名是-pub，代表publicKey，"><a href="#如果你的密钥不是系统默认的RSA文件名id-rsa，比如像我一样另外创了一对公钥-x2F-密钥id-rsa-personal，那么就把他们添加进去，注意：密钥文件是不带扩展名的，公钥扩展名是-pub，代表publicKey，" class="headerlink" title="如果你的密钥不是系统默认的RSA文件名id_rsa，比如像我一样另外创了一对公钥&#x2F;密钥id_rsa_personal，那么就把他们添加进去，注意：密钥文件是不带扩展名的，公钥扩展名是.pub，代表publicKey，"></a>如果你的密钥不是系统默认的RSA文件名id_rsa，比如像我一样另外创了一对公钥&#x2F;密钥id_rsa_personal，那么就把他们添加进去，注意：密钥文件是不带扩展名的，公钥扩展名是.pub，代表publicKey，</h5><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs rust">apple:.ssh apple$ eval <span class="hljs-string">&quot;$(ssh-agent -s)&quot;</span><br>Agent pid <span class="hljs-number">19795</span><br><span class="hljs-comment">//添加密钥 id_rsa_personal</span><br>apple:.ssh apple$ ssh-add id_rsa_personal<br>Identity added: <span class="hljs-title function_ invoke__">id_rsa_personal</span> (github-personal)<br><span class="hljs-comment">//添加默认密钥 id_rsa</span><br>apple:.ssh apple$ ssh-add id_rsa<br><span class="hljs-comment">//密钥有密码的话就会要你提示输入 passphrase</span><br>Enter passphrase <span class="hljs-keyword">for</span> <span class="hljs-title class_">id_rsa</span>: <br><span class="hljs-comment">//测试用密钥isa是否连接成功github</span><br>apple:.ssh apple$ ssh -T git@github.com<br>Hi hbxn740150254! You <span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does not provide shell access.<br><span class="hljs-comment">//测试密钥id_rsa_personal是否连接成功github</span><br>apple:.ssh apple$ ssh -T git@github-personal<br>Hi FaxeXian! You<span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does not provide shell access.<br></code></pre></td></tr></table></figure></li></ul><p><strong>这样，一台电脑生成的两个公钥让两个用户成功连接，就可以访问别人的远程仓库，可以进行多人开发了！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 报错 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WiKi </tag>
            
            <tag> error </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 安装 MySQL</title>
      <link href="/2022/10/13/Docker%E5%AE%89%E8%A3%85MySQL/"/>
      <url>/2022/10/13/Docker%E5%AE%89%E8%A3%85MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-安装-MySQL"><a href="#Docker-安装-MySQL" class="headerlink" title="Docker 安装 MySQL"></a>Docker 安装 MySQL</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -itd --restart=always --name mysql-ai -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql<br></code></pre></td></tr></table></figure><span id="more"></span><blockquote><p>–restart&#x3D;always: 开机启动容器</p><p>-e MYSQL_ROOT_PASSWORD: 设置root密码</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> MySQL </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装FileBrowser</title>
      <link href="/2022/10/13/Docker%E5%AE%89%E8%A3%85FileBrowser/"/>
      <url>/2022/10/13/Docker%E5%AE%89%E8%A3%85FileBrowser/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-安装-FileBrowser"><a href="#Docker-安装-FileBrowser" class="headerlink" title="Docker 安装 FileBrowser"></a>Docker 安装 FileBrowser</h1><p><code>filebrowser</code> 是一款非常棒的文件管理工具，使用 <code>GO</code> 语言编写。</p><p>虽说是文件管理工具，但它完全可以当作网盘程序来使用，并且可以跨平台。</p><span id="more"></span><ol><li>拉取镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull filebrowser/filebrowser<br></code></pre></td></tr></table></figure><ol start="2"><li>创建配置文件目录和数据文件存储目录</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/path/</span>to<span class="hljs-regexp">/your/</span>filebrowser_config<br>mkdir <span class="hljs-regexp">/path/</span>to<span class="hljs-regexp">/your/</span>database<br></code></pre></td></tr></table></figure><ol start="3"><li>创建配置文件</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"># config.json<br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">80</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;baseURL&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/etc/database.db/run.log&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;database&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/etc/database.db/database.db&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;root&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/srv&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>port: 开放的端口</p><p>log: 日志文件存储位置</p><p>database: 服务运行所需数据库存储位置</p><p>root: 服务器共享的根路径</p></blockquote><ol start="4"><li>将配置文件复制到filebrowser_config目录</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp config.json <span class="hljs-regexp">/path/</span>to<span class="hljs-regexp">/your/</span>filebrowser_config/config.json<br></code></pre></td></tr></table></figure><ol start="5"><li>启动容器</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run \<br>--restart=always \<br>--name file \<br>-v /path/to/your/file:/srv \<br>-v /path/to/your/filebrowser_config/config.json:/.filebrowser.json \<br>-v /path/to/your/database:/etc/database.db \<br>-p 80:80 \<br>-d filebrowser/filebrowser<br></code></pre></td></tr></table></figure><blockquote><p>—restart&#x3D;always: 容器随主机开机启动</p><p>–name: 容器名称</p><p>-v &#x2F;path&#x2F;to&#x2F;your&#x2F;file: 要分享的路径, 例如&#x2F;home&#x2F;user&#x2F;file</p><p>-v &#x2F;path&#x2F;to&#x2F;your&#x2F;filebrowser_config&#x2F;config.json: 刚刚创建的配置文件, 此处映射到容器内部的&#x2F;.filebrowser.json配置文件, </p><p>-v &#x2F;path&#x2F;to&#x2F;your&#x2F;database:&#x2F;etc&#x2F;database.db: 服务运行所需数据库存储位置, 映射到容器内部的database.db目录</p><p>-p 80:80 将本机的80端口映射到容器内部的80端口</p><p>-d: 容器后台运行</p><p>filebrowser&#x2F;filebrowser: 使用的镜像</p></blockquote><p>单行版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --restart=always --name file -v /path/to/your/file:/srv -v /config.jsonpath/to/your/filebrowser_config/config.json:/.filebrowser.json -v /path/to/your/database:/etc/database.db -p 80:80 -d filebrowser/filebrowser<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装Hadoop</title>
      <link href="/2022/09/23/CentOS%E5%AE%89%E8%A3%85Hadoop/"/>
      <url>/2022/09/23/CentOS%E5%AE%89%E8%A3%85Hadoop/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS安装Hadoop"><a href="#CentOS安装Hadoop" class="headerlink" title="CentOS安装Hadoop"></a>CentOS安装Hadoop</h1><h2 id="首先换源"><a href="#首先换源" class="headerlink" title="首先换源"></a>首先换源</h2><p><a href="../CentOS_yum%E6%8D%A2%E6%BA%90/index.html">CentOS_yum换源</a></p><h1 id="1-安装java"><a href="#1-安装java" class="headerlink" title="1. 安装java"></a>1. 安装java</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install java-1.8.0-openjdk-devel.x86_64<br></code></pre></td></tr></table></figure><h1 id="2-安装Hadoop"><a href="#2-安装Hadoop" class="headerlink" title="2. 安装Hadoop"></a>2. 安装Hadoop</h1><h3 id="下载hadoop安装包-推荐3-x版本"><a href="#下载hadoop安装包-推荐3-x版本" class="headerlink" title="下载hadoop安装包(推荐3.x版本)"></a>下载hadoop安装包(推荐3.x版本)</h3><p>这里使用中科大镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://mirrors.ustc.edu.cn/apache/hadoop/common/hadoop-2.10.2/hadoop-2.10.2.tar.gz<br></code></pre></td></tr></table></figure><p>3.x版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://mirrors.ustc.edu.cn/apache/hadoop/common/hadoop-3.3.4/hadoop-3.3.4.tar.gz<br></code></pre></td></tr></table></figure><p>更多版本: </p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.10.1/hadoop-2.10.1.tar.gz">https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common</a></p><p><a href="https://mirrors.ustc.edu.cn/apache/hadoop/common">https://mirrors.ustc.edu.cn/apache/hadoop/common</a></p><p>官网(速度极慢)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://archive.apache.org/dist/hadoop/common/hadoop-2.7.7/hadoop-2.7.7.tar.gz<br></code></pre></td></tr></table></figure><h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tar -zxvf hadoop-3.3.4.tar.gz -C /usr/local<br></code></pre></td></tr></table></figure><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><p>编辑配置文件, </p><p>vim 命令模式操作 G跳转到末尾行, o从下一行行首开始编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vi /etc/profile<br></code></pre></td></tr></table></figure><p>将以下内容添加到profile末尾</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># JAVA ENVs</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk<br><span class="hljs-built_in">export</span> JRE_HOME=<span class="hljs-variable">$JAVA_HOME</span>/jre<br><span class="hljs-built_in">export</span> CLASSPATH=<span class="hljs-variable">$JAVA_HOME</span>/lib:<span class="hljs-variable">$JRE_HOME</span>/lib:<span class="hljs-variable">$CLASSPATH</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$JRE_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-comment"># HADOOP_HOME </span><br><span class="hljs-built_in">export</span> HADOOP_HOME=/usr/local/hadoop-3.3.4<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HADOOP_HOME</span>/bin <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HADOOP_HOME</span>/sbin<br></code></pre></td></tr></table></figure><p>使配置文件生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>编辑hadoop-env</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vi <span class="hljs-variable">$HADOOP_HOME</span>/etc/hadoop/hadoop-env.sh<br></code></pre></td></tr></table></figure><p>在末尾添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk<br></code></pre></td></tr></table></figure><h3 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hadoop version<br></code></pre></td></tr></table></figure><h1 id="3-HDFS配置"><a href="#3-HDFS配置" class="headerlink" title="3. HDFS配置"></a>3. HDFS配置</h1><p>参考链接 </p><p><a href="https://www.runoob.com/w3cnote/hdfs-setup.html">4.0 HDFS 配置与使用 | 菜鸟教程</a></p><p>切换到配置文件目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HADOOP_HOME</span>/etc/hadoop<br></code></pre></td></tr></table></figure><p>在 core-site.xml 中，我们在 标签下添加属性：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://<span class="hljs-tag">&lt;<span class="hljs-name">你的IP</span>&gt;</span>:9000<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在 hdfs-site.xml 中的 标签下添加属性：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.replication<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><p>格式化文件结构：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">hdfs namenode -<span class="hljs-built_in">format</span><br></code></pre></td></tr></table></figure><h3 id="启动-HDFS："><a href="#启动-HDFS：" class="headerlink" title="启动 HDFS："></a>启动 HDFS：</h3><p>生成 SSH 密钥：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">cd ~<span class="hljs-regexp">/.ssh/</span> <br>ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p>这里可以一直按回车直到生成结束。</p><p>然后将生成的密钥添加到信任列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys<br></code></pre></td></tr></table></figure><p>修改文件权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 600 ./authorized_keys<br></code></pre></td></tr></table></figure><p>启动hdfs</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span>-dfs.sh<br></code></pre></td></tr></table></figure><h3 id="Hadoop常用端口说明"><a href="#Hadoop常用端口说明" class="headerlink" title="Hadoop常用端口说明"></a>Hadoop常用端口说明</h3><p><a href="https://blog.csdn.net/zhou4411781/article/details/118882276">hadoop常用端口号_南洲.的博客-CSDN博客_hdfs默认端口是8020还是9000</a></p><p>hadoop2.x<br>HDFS Namenode内部通常端口:8020&#x2F;9000<br>HDFS Namenode对用户的查询端口:50070<br>Yarn查看任务运行情况的:8088<br>历史服务器:19888</p><p>hadoop3.x<br>HDFS Namenode内部通常端口:8020&#x2F;9000&#x2F;9820<br>HDFS Namenode对用户的査询端口:9870<br>Yarn查看任务运行情况的:8088<br>历史服务器:19888</p><h1 id="docker安装hadoop"><a href="#docker安装hadoop" class="headerlink" title="docker安装hadoop"></a>docker安装hadoop</h1><p><a href="https://www.runoob.com/w3cnote/hadoop-setup.html">2.0 Hadoop 运行环境 | 菜鸟教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
          <category> CentOS </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> 安装配置 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS_yum换源</title>
      <link href="/2022/09/23/CentOS_yum%E6%8D%A2%E6%BA%90/"/>
      <url>/2022/09/23/CentOS_yum%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS-yum换源"><a href="#CentOS-yum换源" class="headerlink" title="CentOS_yum换源"></a>CentOS_yum换源</h1><h3 id="首先安装-wget"><a href="#首先安装-wget" class="headerlink" title="首先安装 wget"></a>首先安装 <code>wget</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install wget -y<br></code></pre></td></tr></table></figure><h3 id="备份旧源"><a href="#备份旧源" class="headerlink" title="备份旧源"></a>备份旧源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak<br></code></pre></td></tr></table></figure><span id="more"></span><h3 id="获取-repo"><a href="#获取-repo" class="headerlink" title="获取 repo"></a>获取 repo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># epel源</span><br>sudo yum -y install epel-release<br><br><span class="hljs-comment"># 网易源</span><br>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo<br><br><span class="hljs-comment"># 阿里源</span><br>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo<br><br><span class="hljs-comment"># centos8 curl方式</span><br>curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo<br></code></pre></td></tr></table></figure><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum clean all<br></code></pre></td></tr></table></figure><h3 id="缓存软件包信息"><a href="#缓存软件包信息" class="headerlink" title="缓存软件包信息"></a>缓存软件包信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum makecache<br></code></pre></td></tr></table></figure><h3 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum update -y<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
          <category> 换源 </category>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python_pip换源</title>
      <link href="/2022/09/23/Python_pip%E6%8D%A2%E6%BA%90/"/>
      <url>/2022/09/23/Python_pip%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-pip换源"><a href="#Python-pip换源" class="headerlink" title="Python_pip换源"></a>Python_pip换源</h1><h3 id="pip国内的一些镜像"><a href="#pip国内的一些镜像" class="headerlink" title="pip国内的一些镜像"></a>pip国内的一些镜像</h3><p>阿里云</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/pypi/</span>simple/<br></code></pre></td></tr></table></figure><p>中国科技大学</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>pypi.mirrors.ustc.edu.cn<span class="hljs-regexp">/simple/</span><br></code></pre></td></tr></table></figure><p>豆瓣(douban)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>pypi.douban.com<span class="hljs-regexp">/simple/</span><br></code></pre></td></tr></table></figure><p>清华大学</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>pypi.tuna.tsinghua.edu.cn<span class="hljs-regexp">/simple/</span><br></code></pre></td></tr></table></figure><h2 id="linux"><a href="#linux" class="headerlink" title="linux:"></a>linux:</h2><p>修改 ~&#x2F;.pip&#x2F;pip.conf (没有就创建一个)， 内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[global]<br>index-url = [https://pypi.tuna.tsinghua.edu.cn/simple](https://pypi.tuna.tsinghua.edu.cn/simple)<br></code></pre></td></tr></table></figure><h2 id="windows"><a href="#windows" class="headerlink" title="windows:"></a>windows:</h2><p>直接在user目录中创建一个pip目录，如：C:\Users\leo\pip，在pip 目录下新建文件pip.ini，内容如下</p><p>或者：win+R 打开用户目录%HOMEPATH%，在此目录下创建 pip 文件夹，在 pip 目录下创建 pip.ini 文件, 内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[global]<br><span class="hljs-built_in">timeout</span> = 6000<br>index-url = [https://pypi.tuna.tsinghua.edu.cn/simple](https://pypi.tuna.tsinghua.edu.cn/simple)<br>trusted-host = [pypi.tuna.tsinghua.edu.cn](http://pypi.tuna.tsinghua.edu.cn/)<br></code></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install --upgrade pip wheels setuptools<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
          <category> 换源 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter配置</title>
      <link href="/2022/09/23/Jupyter%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/09/23/Jupyter%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Jupyter配置"><a href="#Jupyter配置" class="headerlink" title="Jupyter配置"></a>Jupyter配置</h1><h2 id="Termux下"><a href="#Termux下" class="headerlink" title="Termux下"></a>Termux下</h2><p>安装 <code>libzmq</code></p><blockquote><p>之前报错就是因为没有libzmq，pip安装的时候没法编译</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install libzmq<br></code></pre></td></tr></table></figure><h2 id="安装jupyter"><a href="#安装jupyter" class="headerlink" title="安装jupyter"></a>安装jupyter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install jupyte<br></code></pre></td></tr></table></figure><h2 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jupyter notebook --generate-config<br></code></pre></td></tr></table></figure><p>默认生成在 <code>~/.jupytercd ~/.jupyter</code> </p><h2 id="使用-ipython-生成密匙"><a href="#使用-ipython-生成密匙" class="headerlink" title="使用 ipython 生成密匙"></a>使用 <code>ipython</code> 生成密匙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">from notebook.auth import passwdpasswd()<br></code></pre></td></tr></table></figure><p>按提示输入密码，复制生成的字符串(例如’sha1:aabbcc00’)</p><h2 id="编辑-jupyter-notebook-config-py-添加刚刚生成的密匙"><a href="#编辑-jupyter-notebook-config-py-添加刚刚生成的密匙" class="headerlink" title="编辑 jupyter_notebook_config.py 添加刚刚生成的密匙"></a>编辑 <code>jupyter_notebook_config.py</code> 添加刚刚生成的密匙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">c.NotebookApp.password = <span class="hljs-string">&#x27;sha1:aabbcc00&#x27;</span><br><span class="hljs-comment"># 允许任何ip访问</span><br>c.NotebookApp.ip=<span class="hljs-string">&#x27;*&#x27;</span> <br><span class="hljs-comment"># 禁用自启动浏览器</span><br>c.NotebookApp.open_browser = False <br><span class="hljs-comment"># 设置端口</span><br>c.NotebookApp.port =8888 <br><br></code></pre></td></tr></table></figure><h3 id="（以下为个人配置）设置别名"><a href="#（以下为个人配置）设置别名" class="headerlink" title="（以下为个人配置）设置别名"></a>（以下为个人配置）设置别名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/.jupyter/leo<br>vi ~/.zshrc<br><span class="hljs-built_in">alias</span> myjupyter=<span class="hljs-string">&quot;jupyter notebook --notebook-dir /data/data/com.termux/files/home/.jupyter/leo &amp; sleep 1; termux-open http://127.0.0.1:8880”</span><br></code></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install jupyter_contrib_nbextensions &amp;&amp; jupyter contrib nbextension install<br></code></pre></td></tr></table></figure><p><img src="/img/Jupyter_plugins.png" alt="plugins"></p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> Python </tag>
            
            <tag> Jupyter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu_apt换源</title>
      <link href="/2022/09/23/Ubuntu_apt%E6%8D%A2%E6%BA%90/"/>
      <url>/2022/09/23/Ubuntu_apt%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu-apt换源"><a href="#Ubuntu-apt换源" class="headerlink" title="Ubuntu_apt换源"></a>Ubuntu_apt换源</h1><h2 id="备份apt配置文件："><a href="#备份apt配置文件：" class="headerlink" title="备份apt配置文件："></a><strong>备份apt配置文件：</strong></h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list /</span>etc<span class="hljs-regexp">/apt/</span>sources.list.bak<br></code></pre></td></tr></table></figure><h2 id="编辑apt配置文件："><a href="#编辑apt配置文件：" class="headerlink" title="编辑apt配置文件："></a><strong>编辑apt配置文件：</strong></h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>apt/sources.list<br></code></pre></td></tr></table></figure><h2 id="查看版本代号"><a href="#查看版本代号" class="headerlink" title="查看版本代号"></a>查看版本代号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsb_release -a<br></code></pre></td></tr></table></figure><table><thead><tr><th>ubuntu 12.04</th><th>precise</th></tr></thead><tbody><tr><td>ubuntu 14.04</td><td>trusty</td></tr><tr><td>ubuntu 15.04</td><td>vivid</td></tr><tr><td>ubuntu 15.10</td><td>wily</td></tr><tr><td>ubuntu 16.04</td><td>xenial</td></tr><tr><td>ubuntu 18.04</td><td>bionic</td></tr><tr><td>ubuntu 20.04</td><td>focal</td></tr></tbody></table><h2 id="ubuntu-20"><a href="#ubuntu-20" class="headerlink" title="ubuntu 20"></a>ubuntu 20</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 中科大源</span><br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-updates main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-updates main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-backports main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-backports main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-security main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-security main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-proposed main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-proposed main restricted universe multiverse<br><span class="hljs-comment"># 清华源</span><br>deb https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-updates main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-updates main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-backports main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-backports main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-security main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-security main restricted universe multiverse<br>deb https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-proposed main restricted universe multiverse<br>deb-src https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/ubuntu/</span> focal-proposed main restricted universe<br></code></pre></td></tr></table></figure><h2 id="ubuntu-18"><a href="#ubuntu-18" class="headerlink" title="ubuntu 18"></a>ubuntu 18</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 中科大</span><br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse<br><br><span class="hljs-comment"># 清华</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe<br><br><span class="hljs-comment"># 阿里云</span><br>deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
          <category> 换源 </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang安装与配置</title>
      <link href="/2022/09/23/Golang%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/09/23/Golang%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Golang安装与配置"><a href="#Golang安装与配置" class="headerlink" title="Golang安装与配置"></a>Golang安装与配置</h1><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><p>访问 <a href="https://studygolang.com/dl">Go语言中文网</a> 进行下载</p><h1 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h1><ol><li>下载安装包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget &lt;https://studygolang.com/dl/golang/go1.19.linux-amd64.tar.gz&gt;<br></code></pre></td></tr></table></figure><ol><li>解压安装包至 &#x2F;usr&#x2F;local</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -C /usr/local -xzf go1.19.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><ol><li>配置环境变量</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br><br><span class="hljs-built_in">export</span> GOROOT=/usr/local/go<br><span class="hljs-built_in">export</span> GOPATH=/usr/local/projects/go<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$GOROOT</span>/bin:<span class="hljs-variable">$GPPATH</span>/bin<br><br><span class="hljs-built_in">source</span> ~/.bashrc<br><br><span class="hljs-comment"># 如果使用zsh 则此处bashrc变为zshrc</span><br></code></pre></td></tr></table></figure><ol><li>设置代理</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">go <span class="hljs-built_in">env</span> -w GOPROXY=https://goproxy.io,direct<br>go <span class="hljs-built_in">env</span> -w GO111MODULE=on<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZSH配置</title>
      <link href="/2022/09/23/ZSH%20%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/09/23/ZSH%20%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="ZSH配置"><a href="#ZSH配置" class="headerlink" title="ZSH配置"></a>ZSH配置</h1><h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ubuntu下</span><br>apt install -y zsh<br><span class="hljs-comment"># centos下</span><br>yum install -y zsh<br></code></pre></td></tr></table></figure><h3 id="设置zsh为默认shell"><a href="#设置zsh为默认shell" class="headerlink" title="设置zsh为默认shell"></a>设置zsh为默认shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chsh -s /bin/zsh<br></code></pre></td></tr></table></figure><h3 id="安装git-wget"><a href="#安装git-wget" class="headerlink" title="安装git, wget"></a>安装git, wget</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ubuntu下</span><br>apt install -y git wget<br><span class="hljs-comment"># centos下</span><br>yum install -y git wget<br></code></pre></td></tr></table></figure><h2 id="安装-oh-my-zsh"><a href="#安装-oh-my-zsh" class="headerlink" title="安装 oh-my-zsh"></a>安装 oh-my-zsh</h2><p>使用wget获取安装脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh<br></code></pre></td></tr></table></figure><p>找到以下部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Default settings</span><br>ZSH=<span class="hljs-variable">$&#123;ZSH:-~/.oh-my-zsh&#125;</span><br>REPO=<span class="hljs-variable">$&#123;REPO:-ohmyzsh/ohmyzsh&#125;</span><br>REMOTE=<span class="hljs-variable">$&#123;REMOTE:-https://github.com/<span class="hljs-variable">$&#123;REPO&#125;</span>.git&#125;</span><br>BRANCH=<span class="hljs-variable">$&#123;BRANCH:-master&#125;</span><br></code></pre></td></tr></table></figure><p>把中间两行修改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">REPO=<span class="hljs-variable">$&#123;REPO:-mirrors/oh-my-zsh&#125;</span><br>REMOTE=<span class="hljs-variable">$&#123;REMOTE:-https://gitee.com/<span class="hljs-variable">$&#123;REPO&#125;</span>.git&#125;</span><br></code></pre></td></tr></table></figure><p><code>:wq!</code> 保存 <code>sh install.sh</code> 执行</p><h1 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h1><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>编辑 <code>~/.zshrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 解开第二行环境变量注释</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$HOME</span>/bin:/usr/local/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-comment"># 禁用自动更新</span><br>DISABLE_AUTO_UPDATE=<span class="hljs-string">&quot;true&quot;</span><br><span class="hljs-comment"># 设置皮肤</span><br>ZSH_THEME=<span class="hljs-string">&quot;steeef&quot;</span><br></code></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="安装-zsh-autosuggestions-用于命令补全"><a href="#安装-zsh-autosuggestions-用于命令补全" class="headerlink" title="安装 zsh-autosuggestions 用于命令补全"></a>安装 <a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a> 用于命令补全</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/yantaozhao/zsh-autosuggestions.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure><p>将插件添加至配置文件<code>~/.zshrc</code>中, 将 <code>plugins=(git)</code> 替换为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugins=(<br>            git<br>            zsh-autosuggestions<br>        )<br></code></pre></td></tr></table></figure><p>之后执行 <code>source ~/.zshrc</code> 即可生效 </p><p>如果字体不清晰，可以修改 <code>~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</code> 内的 <code>ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=&#39;fg=240&#39;</code></p><p>注: 颜色值参考</p><p><img src="/img/zsh_colors.png" alt="配色参考"></p><h3 id="安装-zsh-syntax-highlighting-用于语法高亮"><a href="#安装-zsh-syntax-highlighting-用于语法高亮" class="headerlink" title="安装 zsh-syntax-highlighting 用于语法高亮"></a>安装 <a href="https://github.com/zsh-users/zsh-syntax-highlighting"><code>zsh-syntax-highlighting</code></a> 用于语法高亮</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/zsh-users/zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><p>将插件添加至配置文件<code>~/.zshrc</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugins=(    <br>             git<br>             zsh-syntax-highlighting <br>             zsh-autosuggestions<br>        )<br></code></pre></td></tr></table></figure><h2 id="git-bash-安装zsh"><a href="#git-bash-安装zsh" class="headerlink" title="git-bash 安装zsh"></a>git-bash 安装zsh</h2><p><a href="https://www.cnblogs.com/laugh12321/p/15788324.html">一文搞定 Windows Terminal 设置与 zsh 安装【非WSL】</a></p><p><a href="https://juejin.cn/post/7122882640998301733">Windows在git-bash安装zsh - 掘金</a></p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> ZSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Redis</title>
      <link href="/2022/09/23/Docker%E5%AE%89%E8%A3%85Redis/"/>
      <url>/2022/09/23/Docker%E5%AE%89%E8%A3%85Redis/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker安装Redis"><a href="#Docker安装Redis" class="headerlink" title="Docker安装Redis"></a>Docker安装Redis</h1><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull redis<br></code></pre></td></tr></table></figure><span id="more"></span><p>创建配置文件目录, 配置文件实例见文章底部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> -p /usr/local/redis/myredis<br></code></pre></td></tr></table></figure><p>创建数据目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> -p /usr/local/redis/myredis/data<br></code></pre></td></tr></table></figure><h2 id="2-启动容器"><a href="#2-启动容器" class="headerlink" title="2. 启动容器"></a>2. 启动容器</h2><p>无配置文件启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -itd --name myredis -p 6379:6379 redis<br></code></pre></td></tr></table></figure><p>带配置文件启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo docker run \<br> --restart=always \<br> --log-opt max-size=100m \<br> --log-opt max-file=2 \<br>   -p 6379:6379 \<br> --name myredis \<br> -v /usr/local/redis/myredis:/etc/redis \<br> -v /usr/local/redis/myredis/data:/data \<br> -d redis redis-server /etc/redis/myredis.conf \<br> --appendonly <span class="hljs-built_in">yes</span> \<br> --requirepass ******<br></code></pre></td></tr></table></figure><blockquote><p>–restart&#x3D;always 总是开机启动<br>–log是日志方面的<br>-p 6379:6379 将6379端口挂载出去<br>–name 给这个容器取一个名字<br>-v 数据卷挂载<br>&#x2F;usr&#x2F;local&#x2F;redis&#x2F;myredis&#x2F;myredis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf 这里是将 liunx 路径下的myredis.conf 和redis下的redis.conf 挂载在一起。<br>&#x2F;usr&#x2F;local&#x2F;redis&#x2F;myredis&#x2F;data:&#x2F;data 这个同上<br>-d redis 表示后台启动redis<br>redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf 以配置文件启动redis，加载容器内的conf文件，最终找到的是挂载的目录 &#x2F;etc&#x2F;redis&#x2F;redis.conf 也就是liunx下的&#x2F;home&#x2F;redis&#x2F;myredis&#x2F;myredis.conf<br>–appendonly yes 开启redis 持久化<br>–requirepass ****** 设置密码 （如果你是通过docker 容器内部连接的话，就随意，可设可不设。但是如果想向外开放的话，一定要设置</p></blockquote><p>测试是否启动成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps -a | grep myredis<br></code></pre></td></tr></table></figure><p>查看容器30分钟内的日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker logs --since 30m myredis<br></code></pre></td></tr></table></figure><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h2><p>进入容器内部redis-cli</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it myredis redis-cli<br></code></pre></td></tr></table></figure><p>验证密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">auth ******<br></code></pre></td></tr></table></figure><p>redis-cli使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis-cli -h IP地址 -p 端口 -a 密码<br></code></pre></td></tr></table></figure><p><a href="https://cloud.tencent.com/developer/article/1846779">【Redis】redis安装与客户端redis-cli的使用(批量操作)</a></p><p>配置文件</p><h1 id="redis-conf"><a href="#redis-conf" class="headerlink" title="redis.conf"></a>redis.conf</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#  ip 配置, 127.0.0.1代表仅支持本地连接</span><br><span class="hljs-comment"># bind 127.0.0.1</span><br><br><span class="hljs-comment"># 关闭保护模式, 以支持远程连接</span><br>protect-mode no<br><br><span class="hljs-comment"># 端口号</span><br>prot 6379<br><br><span class="hljs-comment"># 表示正在进行三次握手和完成三次握手队列的长度</span><br>tcp-backlog 511 <br><br><span class="hljs-comment"># 空闲客户端自动关闭延迟, 为0表示永不超时, 单位为秒</span><br><span class="hljs-built_in">timeout</span> 0<br><br><span class="hljs-comment"># 每隔300秒检测一次连接是否存活, 不存活则释放连接</span><br>tcp-keepalive 300<br><br><span class="hljs-comment"># 设置redis后台启动</span><br>daemonize <span class="hljs-built_in">yes</span><br><br><span class="hljs-comment"># 每次运行将进程号保存到文件中</span><br>pidfile /var/run/redis_6379.pid<br><br><span class="hljs-comment"># 日志级别 debug, verbose,  notice, warning</span><br>loglevel notice<br><br><span class="hljs-comment"># 日志文件输出路径</span><br>logfile <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-comment"># 最大数据库数量</span><br>database 16<br><br><span class="hljs-comment"># 设置访问密码</span><br><span class="hljs-comment"># requirepass &quot;123456&quot;</span><br><br><span class="hljs-comment"># 客户端最大连接数</span><br><span class="hljs-comment"># maxclients 10000</span><br><br><span class="hljs-comment"># redis最大内存占用</span><br>maxmemory 100mb<br></code></pre></td></tr></table></figure><h1 id="myredis-conf"><a href="#myredis-conf" class="headerlink" title="myredis.conf"></a>myredis.conf</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Redis configuration file example</span><br> <br><span class="hljs-comment"># Note on units: when memory size is needed, it is possible to specify</span><br><span class="hljs-comment"># it in the usual form of 1k 5GB 4M and so forth:</span><br><span class="hljs-comment"># 内存大小的配置，下面是内存大小配置的转换方式</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 1k =&gt; 1000 bytes</span><br><span class="hljs-comment"># 1kb =&gt; 1024 bytes</span><br><span class="hljs-comment"># 1m =&gt; 1000000 bytes</span><br><span class="hljs-comment"># 1mb =&gt; 1024*1024 bytes</span><br><span class="hljs-comment"># 1g =&gt; 1000000000 bytes</span><br><span class="hljs-comment"># 1gb =&gt; 1024*1024*1024 bytes</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># units are case insensitive so 1GB 1Gb 1gB are all the same.</span><br><span class="hljs-comment"># 内存大小的配置，不区分大小写</span><br><span class="hljs-comment">################################## INCLUDES ###################################</span><br> <br><span class="hljs-comment"># Include one or more other config files here.  This is useful if you</span><br><span class="hljs-comment"># have a standard template that goes to all Redis server but also need</span><br><span class="hljs-comment"># to customize a few per-server settings.  Include files can include</span><br><span class="hljs-comment"># other files, so use this wisely.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Notice option &quot;include&quot; won&#x27;t be rewritten by command &quot;CONFIG REWRITE&quot;</span><br><span class="hljs-comment"># from admin or Redis Sentinel. Since Redis always uses the last processed</span><br><span class="hljs-comment"># line as value of a configuration directive, you&#x27;d better put includes</span><br><span class="hljs-comment"># at the beginning of this file to avoid overwriting config change at runtime.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If instead you are interested in using includes to override configuration</span><br><span class="hljs-comment"># options, it is better to use include as the last line.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># include /path/to/local.conf</span><br><span class="hljs-comment"># include /path/to/other.conf</span><br><span class="hljs-comment"># 当配置多个redis时，可能大部分配置一样，而对于不同的redis，只有少部分配置需要定制</span><br><span class="hljs-comment"># 就可以配置一个公共的模板配置。</span><br><span class="hljs-comment"># 对于具体的reids，只需设置少量的配置，并用include把模板配置包含进来即可。</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 值得注意的是，对于同一个配置项，redis只对最后一行的有效</span><br><span class="hljs-comment"># 所以为避免模板配置覆盖当前配置，应在配置文件第一行使用include</span><br><span class="hljs-comment"># 当然，如果模板配置的优先级比较高，就在配置文件最后一行使用include</span><br> <br><span class="hljs-comment">################################ GENERAL  #####################################</span><br> <br><span class="hljs-comment"># By default Redis does not run as a daemon. Use &#x27;yes&#x27; if you need it.</span><br><span class="hljs-comment"># Note that Redis will write a pid file in /var/run/redis.pid when daemonized.</span><br><span class="hljs-comment"># yes为使用守护进程，此时redis的进程ID会被写进 pidfile的配置中</span><br>daemonize <span class="hljs-built_in">yes</span><br> <br><span class="hljs-comment"># When running daemonized, Redis writes a pid file in /var/run/redis.pid by</span><br><span class="hljs-comment"># default. You can specify a custom pid file location here.</span><br><span class="hljs-comment"># 当redis以守护进程的方式启动时，redis的进程ID将会写在这个文件中</span><br>pidfile /var/run/redis.pid<br> <br><span class="hljs-comment"># Accept connections on the specified port, default is 6379.</span><br><span class="hljs-comment"># If port 0 is specified Redis will not listen on a TCP socket.</span><br><span class="hljs-comment"># redis 启动的端口。【应该知道redis是服务端吧】</span><br>port 6379<br> <br><span class="hljs-comment"># TCP listen() backlog.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># In high requests-per-second environments you need an high backlog in order</span><br><span class="hljs-comment"># to avoid slow clients connections issues. Note that the Linux kernel</span><br><span class="hljs-comment"># will silently truncate it to the value of /proc/sys/net/core/somaxconn so</span><br><span class="hljs-comment"># make sure to raise both the value of somaxconn and tcp_max_syn_backlog</span><br><span class="hljs-comment"># in order to get the desired effect.</span><br><span class="hljs-comment"># 最大链接缓冲池的大小，这里应该是指的未完成链接请求的数量</span><br><span class="hljs-comment">#（测试值为1时，仍可以有多个链接）</span><br><span class="hljs-comment"># 但该值与listen函数中的backlog意义应该是相同的，源码中该值就是被用在了listen函数中</span><br><span class="hljs-comment"># 该值同时受/proc/sys/net/core/somaxconn 和 tcp_max_syn_backlog（/etc/sysctl.conf中配置）的限制</span><br><span class="hljs-comment"># tcp_max_syn_backlog 指的是未完成链接的数量</span><br>tcp-backlog 511<br> <br><span class="hljs-comment"># By default Redis listens for connections from all the network interfaces</span><br><span class="hljs-comment"># available on the server. It is possible to listen to just one or multiple</span><br><span class="hljs-comment"># interfaces using the &quot;bind&quot; configuration directive, followed by one or</span><br><span class="hljs-comment"># more IP addresses.</span><br><span class="hljs-comment"># 绑定ip，指定ip可以连接到redis</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Examples:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># bind 192.168.1.100 10.0.0.1</span><br><span class="hljs-comment"># bind 127.0.0.1</span><br> <br><span class="hljs-comment"># Specify the path for the Unix socket that will be used to listen for</span><br><span class="hljs-comment"># incoming connections. There is no default, so Redis will not listen</span><br><span class="hljs-comment"># on a unix socket when not specified.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 这个应该就是以文件形式创建的socket</span><br><span class="hljs-comment"># unixsocket /tmp/redis.sock</span><br><span class="hljs-comment"># unixsocketperm 755</span><br> <br><span class="hljs-comment"># Close the connection after a client is idle for N seconds (0 to disable)</span><br><span class="hljs-comment"># 超时断链机制，如果一个链接在N秒内没有任何操作，则断开该链接</span><br><span class="hljs-comment"># N为0时，该机制失效</span><br><span class="hljs-built_in">timeout</span> 0<br> <br><span class="hljs-comment"># TCP keepalive.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence</span><br><span class="hljs-comment"># of communication. This is useful for two reasons:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 1) Detect dead peers.</span><br><span class="hljs-comment"># 2) Take the connection alive from the point of view of network</span><br><span class="hljs-comment">#    equipment in the middle.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># On Linux, the specified value (in seconds) is the period used to send ACKs.</span><br><span class="hljs-comment"># Note that to close the connection the double of the time is needed.</span><br><span class="hljs-comment"># On other kernels the period depends on the kernel configuration.</span><br><span class="hljs-comment"># 就像心跳检测一样，检查链接是否保持正常，同时也可以保持正常链接的通信</span><br><span class="hljs-comment"># 建议值为60</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># A reasonable value for this option is 60 seconds.</span><br>tcp-keepalive 0<br> <br><span class="hljs-comment"># Specify the server verbosity level.</span><br><span class="hljs-comment"># This can be one of:</span><br><span class="hljs-comment"># debug (a lot of information, useful for development/testing)</span><br><span class="hljs-comment"># verbose (many rarely useful info, but not a mess like the debug level)</span><br><span class="hljs-comment"># notice (moderately verbose, what you want in production probably)</span><br><span class="hljs-comment"># warning (only very important / critical messages are logged)</span><br><span class="hljs-comment"># 日志级别</span><br>loglevel notice<br> <br><span class="hljs-comment"># Specify the log file name. Also the empty string can be used to force</span><br><span class="hljs-comment"># Redis to log on the standard output. Note that if you use standard</span><br><span class="hljs-comment"># output for logging but daemonize, logs will be sent to /dev/null</span><br><span class="hljs-comment"># 日志存放路径，默认是输出到标准输出，但当以守护进程方式启动时，默认输出到/dev/null(传说中的linux黑洞)</span><br>logfile <span class="hljs-string">&quot;&quot;</span><br> <br><span class="hljs-comment"># To enable logging to the system logger, just set &#x27;syslog-enabled&#x27; to yes,</span><br><span class="hljs-comment"># and optionally update the other syslog parameters to suit your needs.</span><br><span class="hljs-comment"># yes 表示将日志写到系统日志中</span><br><span class="hljs-comment"># syslog-enabled no</span><br> <br><span class="hljs-comment"># Specify the syslog identity.</span><br><span class="hljs-comment"># 当syslog-enabled为yes时，指定系统日志的标示为 redis</span><br><span class="hljs-comment"># syslog-ident redis</span><br> <br><span class="hljs-comment"># Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.</span><br><span class="hljs-comment"># 指定系统日志的设备</span><br><span class="hljs-comment"># syslog-facility local0</span><br> <br><span class="hljs-comment"># Set the number of databases. The default database is DB 0, you can select</span><br><span class="hljs-comment"># a different one on a per-connection basis using SELECT &lt;dbid&gt; where</span><br><span class="hljs-comment"># dbid is a number between 0 and &#x27;databases&#x27;-1</span><br><span class="hljs-comment"># redis的数据库数量，默认16个(0~15)，默认使用第0个。</span><br>databases 16<br> <br><span class="hljs-comment">################################ SNAPSHOTTING  ################################</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Save the DB on disk:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   save &lt;seconds&gt; &lt;changes&gt;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   Will save the DB if both the given number of seconds and the given</span><br><span class="hljs-comment">#   number of write operations against the DB occurred.</span><br><span class="hljs-comment"># 快照，即将数据写到硬盘上，在&lt;seconds&gt;秒内，至少有&lt;changes&gt;次写入数据库操作</span><br><span class="hljs-comment"># 则会将数据写入硬盘一次。</span><br><span class="hljs-comment"># 将save行注释掉则永远不会写入硬盘</span><br><span class="hljs-comment"># save &quot;&quot; 表示删除所有的快照点</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   In the example below the behaviour will be to save:</span><br><span class="hljs-comment">#   after 900 sec (15 min) if at least 1 key changed</span><br><span class="hljs-comment">#   after 300 sec (5 min) if at least 10 keys changed</span><br><span class="hljs-comment">#   after 60 sec if at least 10000 keys changed</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   Note: you can disable saving at all commenting all the &quot;save&quot; lines.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   It is also possible to remove all the previously configured save</span><br><span class="hljs-comment">#   points by adding a save directive with a single empty string argument</span><br><span class="hljs-comment">#   like in the following example:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#   save &quot;&quot;</span><br> <br>save 900 1<br>save 300 10<br>save 60 10000<br> <br><span class="hljs-comment"># By default Redis will stop accepting writes if RDB snapshots are enabled</span><br><span class="hljs-comment"># (at least one save point) and the latest background save failed.</span><br><span class="hljs-comment"># This will make the user aware (in a hard way) that data is not persisting</span><br><span class="hljs-comment"># on disk properly, otherwise chances are that no one will notice and some</span><br><span class="hljs-comment"># disaster will happen.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If the background saving process will start working again Redis will</span><br><span class="hljs-comment"># automatically allow writes again.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># However if you have setup your proper monitoring of the Redis server</span><br><span class="hljs-comment"># and persistence, you may want to disable this feature so that Redis will</span><br><span class="hljs-comment"># continue to work as usual even if there are problems with disk,</span><br><span class="hljs-comment"># permissions, and so forth.</span><br><span class="hljs-comment"># 当做快照失败的时候，redis会停止继续向其写入数据，保证第一时间发现redis快照出现问题</span><br><span class="hljs-comment"># 当然，通过下面配置为 no，即使redis快照失败，也能继续向redis写入数据</span><br>stop-writes-on-bgsave-error <span class="hljs-built_in">yes</span><br> <br><span class="hljs-comment"># Compress string objects using LZF when dump .rdb databases?</span><br><span class="hljs-comment"># For default that&#x27;s set to &#x27;yes&#x27; as it&#x27;s almost always a win.</span><br><span class="hljs-comment"># If you want to save some CPU in the saving child set it to &#x27;no&#x27; but</span><br><span class="hljs-comment"># the dataset will likely be bigger if you have compressible values or keys.</span><br><span class="hljs-comment"># 快照的时候，是否用LZF压缩，使用压缩会占一定的cpu，但不使用压缩，快照会很大</span><br>rdbcompression <span class="hljs-built_in">yes</span><br> <br><span class="hljs-comment"># Since version 5 of RDB a CRC64 checksum is placed at the end of the file.</span><br><span class="hljs-comment"># This makes the format more resistant to corruption but there is a performance</span><br><span class="hljs-comment"># hit to pay (around 10%) when saving and loading RDB files, so you can disable it</span><br><span class="hljs-comment"># for maximum performances.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># RDB files created with checksum disabled have a checksum of zero that will</span><br><span class="hljs-comment"># tell the loading code to skip the check.</span><br><span class="hljs-comment"># 数据校验，快照末尾会存放一个校验值，保证数据的准确性</span><br><span class="hljs-comment"># 但数据校验会使性能下降约10%，默认开启校验</span><br>rdbchecksum <span class="hljs-built_in">yes</span><br> <br><span class="hljs-comment"># The filename where to dump the DB</span><br><span class="hljs-comment"># 快照的名字</span><br>dbfilename dump.rdb<br> <br><span class="hljs-comment"># The working directory.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The DB will be written inside this directory, with the filename specified</span><br><span class="hljs-comment"># above using the &#x27;dbfilename&#x27; configuration directive.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># The Append Only File will also be created inside this directory.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Note that you must specify a directory here, not a file name.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># 快照存放的目录</span><br><span class="hljs-comment"># linux root下测试，会发现该进程会在当前目录下创建一个dump.rdb</span><br><span class="hljs-comment"># 但快照却放在了根目录/下，重启的时候，是不会从快照中恢复数据的</span><br><span class="hljs-comment"># 当把根目录下的dump.rdb文件拷贝到当前目录的时候，再次启动，就会从快照中恢复数据</span><br><span class="hljs-comment"># 而且以后的快照也都在当前目录的dump.rdb中做操作</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 值得一提的是，快照是异步方式的，如果在还未达到快照的时候，修改了数据，而且redis发生问题crash了</span><br><span class="hljs-comment"># 那么中间的修改数据是不会被保存到dump.rdb快照中的</span><br><span class="hljs-comment"># 解决办法就是用Append Only Mode的同步模式(下面将会有该配置项)</span><br><span class="hljs-comment"># 将会把每个操作写到Append Only File中，该文件也存放于当前配置的目录</span><br><span class="hljs-comment"># 建议使用绝对路径！！！</span><br><span class="hljs-comment"># </span><br><span class="hljs-built_in">dir</span> ./<br> <br><span class="hljs-comment">################################# REPLICATION #################################</span><br> <br><span class="hljs-comment"># Master-Slave replication. Use slaveof to make a Redis instance a copy of</span><br><span class="hljs-comment"># another Redis server. Note that the configuration is local to the slave</span><br><span class="hljs-comment"># so for example it is possible to configure the slave to save the DB with a</span><br><span class="hljs-comment"># different interval, or to listen to another port, and so on.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 主从复制，类似于双机备份。</span><br><span class="hljs-comment"># 配置需指定主机的ip 和port</span><br><span class="hljs-comment"># slaveof &lt;masterip&gt; &lt;masterport&gt;</span><br> <br><span class="hljs-comment"># If the master is password protected (using the &quot;requirepass&quot; configuration</span><br><span class="hljs-comment"># directive below) it is possible to tell the slave to authenticate before</span><br><span class="hljs-comment"># starting the replication synchronization process, otherwise the master will</span><br><span class="hljs-comment"># refuse the slave request.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 如果主机redis需要密码，则指定密码</span><br><span class="hljs-comment"># 密码配置在下面安全配置中</span><br><span class="hljs-comment"># masterauth &lt;master-password&gt;</span><br> <br><span class="hljs-comment"># When a slave loses its connection with the master, or when the replication</span><br><span class="hljs-comment"># is still in progress, the slave can act in two different ways:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 1) if slave-serve-stale-data is set to &#x27;yes&#x27; (the default) the slave will</span><br><span class="hljs-comment">#    still reply to client requests, possibly with out of date data, or the</span><br><span class="hljs-comment">#    data set may just be empty if this is the first synchronization.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 2) if slave-serve-stale-data is set to &#x27;no&#x27; the slave will reply with</span><br><span class="hljs-comment">#    an error &quot;SYNC with master in progress&quot; to all the kind of commands</span><br><span class="hljs-comment">#    but to INFO and SLAVEOF.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 当从机与主机断开时，即同步出现问题的时候，从机有两种处理方式</span><br><span class="hljs-comment"># yes, 继续响应客户端请求，但可能有脏数据（过期数据、空数据等）</span><br><span class="hljs-comment"># no，对客户端的请求统一回复为“SYNC with master in progress”，除了INFO和SLAVEOF命令</span><br>slave-serve-stale-data <span class="hljs-built_in">yes</span><br> <br><span class="hljs-comment"># You can configure a slave instance to accept writes or not. Writing against</span><br><span class="hljs-comment"># a slave instance may be useful to store some ephemeral data (because data</span><br><span class="hljs-comment"># written on a slave will be easily deleted after resync with the master) but</span><br><span class="hljs-comment"># may also cause problems if clients are writing to it because of a</span><br><span class="hljs-comment"># misconfiguration.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Since Redis 2.6 by default slaves are read-only.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Note: read only slaves are not designed to be exposed to untrusted clients</span><br><span class="hljs-comment"># on the internet. It&#x27;s just a protection layer against misuse of the instance.</span><br><span class="hljs-comment"># Still a read only slave exports by default all the administrative commands</span><br><span class="hljs-comment"># such as CONFIG, DEBUG, and so forth. To a limited extent you can improve</span><br><span class="hljs-comment"># security of read only slaves using &#x27;rename-command&#x27; to shadow all the</span><br><span class="hljs-comment"># administrative / dangerous commands.</span><br><span class="hljs-comment"># slave只读选项，设置从机只读（默认）。</span><br><span class="hljs-comment"># 即使设置可写，当下一次从主机上同步数据，仍然会删除当前从机上写入的数据</span><br><span class="hljs-comment"># 【待测试】：主机与从机互为slave会出现什么情况？</span><br><span class="hljs-comment"># 【预期三种结果】：1. 提示报错 2. 主从服务器数据不可控 3. 一切正常</span><br>slave-read-only <span class="hljs-built_in">yes</span><br> <br><span class="hljs-comment"># Slaves send PINGs to server in a predefined interval. It&#x27;s possible to change</span><br><span class="hljs-comment"># this interval with the repl_ping_slave_period option. The default value is 10</span><br><span class="hljs-comment"># seconds.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 从服务器向主服务器发送心跳包，默认10发送一次</span><br><span class="hljs-comment"># repl-ping-slave-period 10</span><br> <br><span class="hljs-comment"># The following option sets the replication timeout for:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 1) Bulk transfer I/O during SYNC, from the point of view of slave.</span><br><span class="hljs-comment"># 2) Master timeout from the point of view of slaves (data, pings).</span><br><span class="hljs-comment"># 3) Slave timeout from the point of view of masters (REPLCONF ACK pings).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># It is important to make sure that this value is greater than the value</span><br><span class="hljs-comment"># specified for repl-ping-slave-period otherwise a timeout will be detected</span><br><span class="hljs-comment"># every time there is low traffic between the master and the slave.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 超时响应时间，值必须比repl-ping-slave-period大</span><br><span class="hljs-comment"># 批量数据传输超时、ping超时</span><br><span class="hljs-comment"># repl-timeout 60</span><br> <br><span class="hljs-comment"># Disable TCP_NODELAY on the slave socket after SYNC?</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If you select &quot;yes&quot; Redis will use a smaller number of TCP packets and</span><br><span class="hljs-comment"># less bandwidth to send data to slaves. But this can add a delay for</span><br><span class="hljs-comment"># the data to appear on the slave side, up to 40 milliseconds with</span><br><span class="hljs-comment"># Linux kernels using a default configuration.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If you select &quot;no&quot; the delay for data to appear on the slave side will</span><br><span class="hljs-comment"># be reduced but more bandwidth will be used for replication.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># By default we optimize for low latency, but in very high traffic conditions</span><br><span class="hljs-comment"># or when the master and slaves are many hops away, turning this to &quot;yes&quot; may</span><br><span class="hljs-comment"># be a good idea.</span><br><span class="hljs-comment"># 主从同步是否延迟</span><br><span class="hljs-comment"># yes 有延迟，约40毫秒（linux kernel的默认配置），使用较少的数据包，较小的带宽</span><br><span class="hljs-comment"># no 无延迟（减少延迟），但需要更大的带宽</span><br>repl-disable-tcp-nodelay no<br> <br><span class="hljs-comment"># Set the replication backlog size. The backlog is a buffer that accumulates</span><br><span class="hljs-comment"># slave data when slaves are disconnected for some time, so that when a slave</span><br><span class="hljs-comment"># wants to reconnect again, often a full resync is not needed, but a partial</span><br><span class="hljs-comment"># resync is enough, just passing the portion of data the slave missed while</span><br><span class="hljs-comment"># disconnected.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The biggest the replication backlog, the longer the time the slave can be</span><br><span class="hljs-comment"># disconnected and later be able to perform a partial resynchronization.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The backlog is only allocated once there is at least a slave connected.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 默认情况下，当slave重连的时候，会进行全量数据同步</span><br><span class="hljs-comment"># 但实际上slave只需要部分同步即可，这个选项设置部分同步的大小</span><br><span class="hljs-comment"># 设置值越大，同步的时间就越长</span><br><span class="hljs-comment"># repl-backlog-size 1mb</span><br> <br><span class="hljs-comment"># After a master has no longer connected slaves for some time, the backlog</span><br><span class="hljs-comment"># will be freed. The following option configures the amount of seconds that</span><br><span class="hljs-comment"># need to elapse, starting from the time the last slave disconnected, for</span><br><span class="hljs-comment"># the backlog buffer to be freed.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># A value of 0 means to never release the backlog.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 主机的后台日志释放时间，即当没有slave连接时，过多久释放后台日志</span><br><span class="hljs-comment"># 0表示不释放</span><br><span class="hljs-comment"># repl-backlog-ttl 3600</span><br> <br><span class="hljs-comment"># The slave priority is an integer number published by Redis in the INFO output.</span><br><span class="hljs-comment"># It is used by Redis Sentinel in order to select a slave to promote into a</span><br><span class="hljs-comment"># master if the master is no longer working correctly.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># A slave with a low priority number is considered better for promotion, so</span><br><span class="hljs-comment"># for instance if there are three slaves with priority 10, 100, 25 Sentinel will</span><br><span class="hljs-comment"># pick the one with priority 10, that is the lowest.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># However a special priority of 0 marks the slave as not able to perform the</span><br><span class="hljs-comment"># role of master, so a slave with priority of 0 will never be selected by</span><br><span class="hljs-comment"># Redis Sentinel for promotion.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># By default the priority is 100.</span><br><span class="hljs-comment"># 当主机crash的时候，在从机中选择一台作为主机，数字越小，优先级越高</span><br><span class="hljs-comment"># 0 表示永远不作为主机，默认值是100</span><br>slave-priority 100<br> <br><span class="hljs-comment"># It is possible for a master to stop accepting writes if there are less than</span><br><span class="hljs-comment"># N slaves connected, having a lag less or equal than M seconds.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The N slaves need to be in &quot;online&quot; state.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The lag in seconds, that must be &lt;= the specified value, is calculated from</span><br><span class="hljs-comment"># the last ping received from the slave, that is usually sent every second.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This option does not GUARANTEES that N replicas will accept the write, but</span><br><span class="hljs-comment"># will limit the window of exposure for lost writes in case not enough slaves</span><br><span class="hljs-comment"># are available, to the specified number of seconds.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For example to require at least 3 slaves with a lag &lt;= 10 seconds use:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 当slave数量小于min-slaves-to-write，且延迟小于等于min-slaves-max-lag时，</span><br><span class="hljs-comment"># 主机停止写入操作</span><br><span class="hljs-comment"># 0表示禁用</span><br><span class="hljs-comment"># 默认min-slaves-to-write为0，即禁用。min-slaves-max-lag为10</span><br><span class="hljs-comment"># min-slaves-to-write 3</span><br><span class="hljs-comment"># min-slaves-max-lag 10</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Setting one or the other to 0 disables the feature.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># By default min-slaves-to-write is set to 0 (feature disabled) and</span><br><span class="hljs-comment"># min-slaves-max-lag is set to 10.</span><br> <br><span class="hljs-comment">################################## SECURITY ###################################</span><br> <br><span class="hljs-comment"># Require clients to issue AUTH &lt;PASSWORD&gt; before processing any other</span><br><span class="hljs-comment"># commands.  This might be useful in environments in which you do not trust</span><br><span class="hljs-comment"># others with access to the host running redis-server.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This should stay commented out for backward compatibility and because most</span><br><span class="hljs-comment"># people do not need auth (e.g. they run their own servers).</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Warning: since Redis is pretty fast an outside user can try up to</span><br><span class="hljs-comment"># 150k passwords per second against a good box. This means that you should</span><br><span class="hljs-comment"># use a very strong password otherwise it will be very easy to break.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># redis密码，默认不配置，即无密码</span><br><span class="hljs-comment"># 这里注意，如果设置了密码，应该设置一个复杂度比较高的密码</span><br><span class="hljs-comment"># 因为redis的速度很快，每秒可以尝试150k次的密码测试，很容易对其进行暴力破解（跑码）。</span><br><span class="hljs-comment"># 疑问：这里为什么不设置一个针对主机的测试次数限制的，例如每10次，则禁止建立连接1个小时！</span><br><span class="hljs-comment"># requirepass foobared</span><br> <br><span class="hljs-comment"># Command renaming.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># It is possible to change the name of dangerous commands in a shared</span><br><span class="hljs-comment"># environment. For instance the CONFIG command may be renamed into something</span><br><span class="hljs-comment"># hard to guess so that it will still be available for internal-use tools</span><br><span class="hljs-comment"># but not available for general clients.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 命令重命名，将命令重命名为另一个字符串标识</span><br><span class="hljs-comment"># 如果命令为空串(&quot;&quot;)，则会彻底禁用该命令</span><br><span class="hljs-comment"># 命令重命名，会对写AOF(Append of file)文件、slave从机造成一些问题</span><br><span class="hljs-comment"># Example:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># It is also possible to completely kill a command by renaming it into</span><br><span class="hljs-comment"># an empty string:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># rename-command CONFIG &quot;&quot;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Please note that changing the name of commands that are logged into the</span><br><span class="hljs-comment"># AOF file or transmitted to slaves may cause problems.</span><br> <br><span class="hljs-comment">################################### LIMITS ####################################</span><br> <br><span class="hljs-comment"># Set the max number of connected clients at the same time. By default</span><br><span class="hljs-comment"># this limit is set to 10000 clients, however if the Redis server is not</span><br><span class="hljs-comment"># able to configure the process file limit to allow for the specified limit</span><br><span class="hljs-comment"># the max number of allowed clients is set to the current file limit</span><br><span class="hljs-comment"># minus 32 (as Redis reserves a few file descriptors for internal uses).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Once the limit is reached Redis will close all the new connections sending</span><br><span class="hljs-comment"># an error &#x27;max number of clients reached&#x27;.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 这只redis的最大连接数目，默认设置为10000个客户端</span><br><span class="hljs-comment"># 当超过限制时，将段开新的连接，并响应“max number of clients reached”</span><br><span class="hljs-comment"># maxclients 10000</span><br> <br><span class="hljs-comment"># Don&#x27;t use more memory than the specified amount of bytes.</span><br><span class="hljs-comment"># When the memory limit is reached Redis will try to remove keys</span><br><span class="hljs-comment"># according to the eviction policy selected (see maxmemory-policy).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If Redis can&#x27;t remove keys according to the policy, or if the policy is</span><br><span class="hljs-comment"># set to &#x27;noeviction&#x27;, Redis will start to reply with errors to commands</span><br><span class="hljs-comment"># that would use more memory, like SET, LPUSH, and so on, and will continue</span><br><span class="hljs-comment"># to reply to read-only commands like GET.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This option is usually useful when using Redis as an LRU cache, or to set</span><br><span class="hljs-comment"># a hard memory limit for an instance (using the &#x27;noeviction&#x27; policy).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># WARNING: If you have slaves attached to an instance with maxmemory on,</span><br><span class="hljs-comment"># the size of the output buffers needed to feed the slaves are subtracted</span><br><span class="hljs-comment"># from the used memory count, so that network problems / resyncs will</span><br><span class="hljs-comment"># not trigger a loop where keys are evicted, and in turn the output</span><br><span class="hljs-comment"># buffer of slaves is full with DELs of keys evicted triggering the deletion</span><br><span class="hljs-comment"># of more keys, and so forth until the database is completely emptied.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># In short... if you have slaves attached it is suggested that you set a lower</span><br><span class="hljs-comment"># limit for maxmemory so that there is some free RAM on the system for slave</span><br><span class="hljs-comment"># output buffers (but this is not needed if the policy is &#x27;noeviction&#x27;).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># redis的最大内存限制，如果达到最大内存，会按照下面的maxmemory-policy进行清除</span><br><span class="hljs-comment"># 如果不能再清除或者maxmemory-policy为noeviction，则对于需要增加空间的操作，将会返回错误</span><br><span class="hljs-comment"># maxmemory &lt;1024*1024*1024&gt;</span><br>maxmemory 200mb<br> <br><span class="hljs-comment"># MAXMEMORY POLICY: how Redis will select what to remove when maxmemory</span><br><span class="hljs-comment"># is reached. You can select among five behaviors:</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># volatile-lru -&gt; remove the key with an expire set using an LRU algorithm</span><br><span class="hljs-comment"># allkeys-lru -&gt; remove any key accordingly to the LRU algorithm</span><br><span class="hljs-comment"># volatile-random -&gt; remove a random key with an expire set</span><br><span class="hljs-comment"># allkeys-random -&gt; remove a random key, any key</span><br><span class="hljs-comment"># volatile-ttl -&gt; remove the key with the nearest expire time (minor TTL)</span><br><span class="hljs-comment"># noeviction -&gt; don&#x27;t expire at all, just return an error on write operations</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Note: with any of the above policies, Redis will return an error on write</span><br><span class="hljs-comment">#       operations, when there are not suitable keys for eviction.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#       At the date of writing this commands are: set setnx setex append</span><br><span class="hljs-comment">#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd</span><br><span class="hljs-comment">#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby</span><br><span class="hljs-comment">#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby</span><br><span class="hljs-comment">#       getset mset msetnx exec sort</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The default is:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 内存删除策略，默认volatile-lru，利用LRU算法，删除过期的key</span><br>maxmemory-policy volatile-lru<br> <br><span class="hljs-comment"># LRU and minimal TTL algorithms are not precise algorithms but approximated</span><br><span class="hljs-comment"># algorithms (in order to save memory), so you can select as well the sample</span><br><span class="hljs-comment"># size to check. For instance for default Redis will check three keys and</span><br><span class="hljs-comment"># pick the one that was used less recently, you can change the sample size</span><br><span class="hljs-comment"># using the following configuration directive.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># LRU算法与最小TTL算法只是相对精确的算法，并不是绝对精确的算法</span><br><span class="hljs-comment"># 为了更精确，可以设置样本个数</span><br><span class="hljs-comment"># 比如设置3个样本，redis会选取三个key，并选择删除那个上次使用时间最远的</span><br><span class="hljs-comment"># maxmemory-samples 3</span><br> <br><span class="hljs-comment">############################## APPEND ONLY MODE ###############################</span><br> <br><span class="hljs-comment"># By default Redis asynchronously dumps the dataset on disk. This mode is</span><br><span class="hljs-comment"># good enough in many applications, but an issue with the Redis process or</span><br><span class="hljs-comment"># a power outage may result into a few minutes of writes lost (depending on</span><br><span class="hljs-comment"># the configured save points).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The Append Only File is an alternative persistence mode that provides</span><br><span class="hljs-comment"># much better durability. For instance using the default data fsync policy</span><br><span class="hljs-comment"># (see later in the config file) Redis can lose just one second of writes in a</span><br><span class="hljs-comment"># dramatic event like a server power outage, or a single write if something</span><br><span class="hljs-comment"># wrong with the Redis process itself happens, but the operating system is</span><br><span class="hljs-comment"># still running correctly.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># AOF and RDB persistence can be enabled at the same time without problems.</span><br><span class="hljs-comment"># If the AOF is enabled on startup Redis will load the AOF, that is the file</span><br><span class="hljs-comment"># with the better durability guarantees.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Please check http://redis.io/topics/persistence for more information.</span><br><span class="hljs-comment"># 将对redis所有的操作都保存到AOF文件中</span><br><span class="hljs-comment"># 因为dump.rdb是异步的，在下次快照到达之前，如果出现crash等问题，会造成数据丢失</span><br><span class="hljs-comment"># 而AOF文件时同步记录的，所以会完整的恢复数据</span><br> <br>appendonly no<br> <br><span class="hljs-comment"># The name of the append only file (default: &quot;appendonly.aof&quot;)</span><br><span class="hljs-comment"># AOF文件的名字</span><br> <br>appendfilename <span class="hljs-string">&quot;appendonly.aof&quot;</span><br> <br><span class="hljs-comment"># The fsync() call tells the Operating System to actually write data on disk</span><br><span class="hljs-comment"># instead to wait for more data in the output buffer. Some OS will really flush </span><br><span class="hljs-comment"># data on disk, some other OS will just try to do it ASAP.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Redis supports three different modes:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># no: don&#x27;t fsync, just let the OS flush the data when it wants. Faster.</span><br><span class="hljs-comment"># always: fsync after every write to the append only log . Slow, Safest.</span><br><span class="hljs-comment"># everysec: fsync only one time every second. Compromise.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The default is &quot;everysec&quot;, as that&#x27;s usually the right compromise between</span><br><span class="hljs-comment"># speed and data safety. It&#x27;s up to you to understand if you can relax this to</span><br><span class="hljs-comment"># &quot;no&quot; that will let the operating system flush the output buffer when</span><br><span class="hljs-comment"># it wants, for better performances (but if you can live with the idea of</span><br><span class="hljs-comment"># some data loss consider the default persistence mode that&#x27;s snapshotting),</span><br><span class="hljs-comment"># or on the contrary, use &quot;always&quot; that&#x27;s very slow but a bit safer than</span><br><span class="hljs-comment"># everysec.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># More details please check the following article:</span><br><span class="hljs-comment"># http://antirez.com/post/redis-persistence-demystified.html</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If unsure, use &quot;everysec&quot;.</span><br><span class="hljs-comment"># redis的数据同步方式，三种</span><br><span class="hljs-comment"># no，redis本身不做同步，由OS来做。redis的速度会很快</span><br><span class="hljs-comment"># always，在每次写操作之后，redis都进行同步，即写入AOF文件。redis会变慢，但是数据更安全</span><br><span class="hljs-comment"># everysec，折衷考虑，每秒同步一次数据。【默认】</span><br> <br><span class="hljs-comment"># appendfsync always</span><br>appendfsync everysec<br><span class="hljs-comment"># appendfsync no</span><br> <br><span class="hljs-comment"># When the AOF fsync policy is set to always or everysec, and a background</span><br><span class="hljs-comment"># saving process (a background save or AOF log background rewriting) is</span><br><span class="hljs-comment"># performing a lot of I/O against the disk, in some Linux configurations</span><br><span class="hljs-comment"># Redis may block too long on the fsync() call. Note that there is no fix for</span><br><span class="hljs-comment"># this currently, as even performing fsync in a different thread will block</span><br><span class="hljs-comment"># our synchronous write(2) call.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># In order to mitigate this problem it&#x27;s possible to use the following option</span><br><span class="hljs-comment"># that will prevent fsync() from being called in the main process while a</span><br><span class="hljs-comment"># BGSAVE or BGREWRITEAOF is in progress.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This means that while another child is saving, the durability of Redis is</span><br><span class="hljs-comment"># the same as &quot;appendfsync none&quot;. In practical terms, this means that it is</span><br><span class="hljs-comment"># possible to lose up to 30 seconds of log in the worst scenario (with the</span><br><span class="hljs-comment"># default Linux settings).</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># If you have latency problems turn this to &quot;yes&quot;. Otherwise leave it as</span><br><span class="hljs-comment"># &quot;no&quot; that is the safest pick from the point of view of durability.</span><br><span class="hljs-comment"># redis的同步方式中，always和everysec，快照和写AOF可能会执行大量的硬盘I/O操作，</span><br><span class="hljs-comment"># 而在一些Linux的配置中，redis会阻塞很久，而redis本身并没有很好的解决这一问题。</span><br><span class="hljs-comment"># 为了缓和这一问题，redis提供no-appendfsync-on-rewrite选项，</span><br><span class="hljs-comment"># 即当有另外一个进程在执行保存操作的时候，redis采用no的同步方式。</span><br><span class="hljs-comment"># 最坏情况下会有延迟30秒的同步延迟。</span><br><span class="hljs-comment"># 如果你觉得这样做会有潜在危险，则请将该选项改为yes。否则就保持默认值no（基于稳定性考虑）。</span><br> <br>no-appendfsync-on-rewrite no<br> <br><span class="hljs-comment"># Automatic rewrite of the append only file.</span><br><span class="hljs-comment"># Redis is able to automatically rewrite the log file implicitly calling</span><br><span class="hljs-comment"># BGREWRITEAOF when the AOF log size grows by the specified percentage.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># This is how it works: Redis remembers the size of the AOF file after the</span><br><span class="hljs-comment"># latest rewrite (if no rewrite has happened since the restart, the size of</span><br><span class="hljs-comment"># the AOF at startup is used).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This base size is compared to the current size. If the current size is</span><br><span class="hljs-comment"># bigger than the specified percentage, the rewrite is triggered. Also</span><br><span class="hljs-comment"># you need to specify a minimal size for the AOF file to be rewritten, this</span><br><span class="hljs-comment"># is useful to avoid rewriting the AOF file even if the percentage increase</span><br><span class="hljs-comment"># is reached but it is still pretty small.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Specify a percentage of zero in order to disable the automatic AOF</span><br><span class="hljs-comment"># rewrite feature.</span><br><span class="hljs-comment"># 自动重写AOF文件</span><br><span class="hljs-comment"># 当AOF日志文件大小增长到指定百分比时，redis会自动隐式调用BGREWRITEAOF来重写AOF文件</span><br><span class="hljs-comment"># redis会记录上次重写AOF文件之后的大小，</span><br><span class="hljs-comment"># 如果当前文件大小增加了auto-aof-rewrite-percentage，则会触发重写AOF日志功能</span><br><span class="hljs-comment"># 当然如果文件过小，比如小于auto-aof-rewrite-min-size这个大小，是不会触发重写AOF日志功能的</span><br><span class="hljs-comment"># auto-aof-rewrite-percentage为0时，禁用重写功能</span><br> <br>auto-aof-rewrite-percentage 100<br>auto-aof-rewrite-min-size 64mb<br> <br><span class="hljs-comment">################################ LUA SCRIPTING  ###############################</span><br> <br><span class="hljs-comment"># Max execution time of a Lua script in milliseconds.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If the maximum execution time is reached Redis will log that a script is</span><br><span class="hljs-comment"># still in execution after the maximum allowed time and will start to</span><br><span class="hljs-comment"># reply to queries with an error.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># When a long running script exceed the maximum execution time only the</span><br><span class="hljs-comment"># SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be</span><br><span class="hljs-comment"># used to stop a script that did not yet called write commands. The second</span><br><span class="hljs-comment"># is the only way to shut down the server in the case a write commands was</span><br><span class="hljs-comment"># already issue by the script but the user don&#x27;t want to wait for the natural</span><br><span class="hljs-comment"># termination of the script.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Set it to 0 or a negative value for unlimited execution without warnings.</span><br><span class="hljs-comment"># LUA脚本的最大执行时间（单位是毫秒），默认5000毫秒，即5秒</span><br><span class="hljs-comment"># 如果LUA脚本执行超过这个限制，可以调用SCRIPT KILL和SHUTDOWN NOSAVE命令。</span><br><span class="hljs-comment"># SCRIPT KILL可以终止脚本执行</span><br><span class="hljs-comment"># SHUTDOWN NOSAVE关闭服务，防止LUA脚本的写操作发生</span><br><span class="hljs-comment"># 该值为0或者负数，表示没有限制时间</span><br>lua-time-limit 5000<br> <br><span class="hljs-comment">################################## SLOW LOG ###################################</span><br> <br><span class="hljs-comment"># The Redis Slow Log is a system to log queries that exceeded a specified</span><br><span class="hljs-comment"># execution time. The execution time does not include the I/O operations</span><br><span class="hljs-comment"># like talking with the client, sending the reply and so forth,</span><br><span class="hljs-comment"># but just the time needed to actually execute the command (this is the only</span><br><span class="hljs-comment"># stage of command execution where the thread is blocked and can not serve</span><br><span class="hljs-comment"># other requests in the meantime).</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># You can configure the slow log with two parameters: one tells Redis</span><br><span class="hljs-comment"># what is the execution time, in microseconds, to exceed in order for the</span><br><span class="hljs-comment"># command to get logged, and the other parameter is the length of the</span><br><span class="hljs-comment"># slow log. When a new command is logged the oldest one is removed from the</span><br><span class="hljs-comment"># queue of logged commands.</span><br><span class="hljs-comment"># 记录执行比较慢的命令</span><br><span class="hljs-comment"># 执行比较慢仅仅是指命令的执行时间，不包括客户端的链接与响应等时间</span><br><span class="hljs-comment"># slowlog-log-slower-than 设定这个慢的时间，单位是微妙，即1000000表示1秒，0表示所有命令都记录，负数表示不记录</span><br><span class="hljs-comment"># slowlog-max-len表示记录的慢命令的个数，超过限制，则最早记录的命令会被移除</span><br><span class="hljs-comment"># 命令的长度没有限制，但是会消耗内存，用SLOWLOG RESET来收回这些消耗的内存</span><br> <br><span class="hljs-comment"># The following time is expressed in microseconds, so 1000000 is equivalent</span><br><span class="hljs-comment"># to one second. Note that a negative number disables the slow log, while</span><br><span class="hljs-comment"># a value of zero forces the logging of every command.</span><br>slowlog-log-slower-than 10000<br> <br><span class="hljs-comment"># There is no limit to this length. Just be aware that it will consume memory.</span><br><span class="hljs-comment"># You can reclaim memory used by the slow log with SLOWLOG RESET.</span><br>slowlog-max-len 128<br> <br><span class="hljs-comment">################################ LATENCY MONITOR ##############################</span><br> <br><span class="hljs-comment"># The Redis latency monitoring subsystem samples different operations</span><br><span class="hljs-comment"># at runtime in order to collect data related to possible sources of</span><br><span class="hljs-comment"># latency of a Redis instance.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Via the LATENCY command this information is available to the user that can</span><br><span class="hljs-comment"># print graphs and obtain reports.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The system only logs operations that were performed in a time equal or</span><br><span class="hljs-comment"># greater than the amount of milliseconds specified via the</span><br><span class="hljs-comment"># latency-monitor-threshold configuration directive. When its value is set</span><br><span class="hljs-comment"># to zero, the latency monitor is turned off.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># By default latency monitoring is disabled since it is mostly not needed</span><br><span class="hljs-comment"># if you don&#x27;t have latency issues, and collecting data has a performance</span><br><span class="hljs-comment"># impact, that while very small, can be measured under big load. Latency</span><br><span class="hljs-comment"># monitoring can easily be enalbed at runtime using the command</span><br><span class="hljs-comment"># &quot;CONFIG SET latency-monitor-threshold &lt;milliseconds&gt;&quot; if needed.</span><br><span class="hljs-comment"># 延迟监控器</span><br><span class="hljs-comment"># redis延迟监控子系统在运行时，会抽样检测可能导致延迟的不同操作</span><br><span class="hljs-comment"># 通过LATENCY命令可以打印相关信息和报告, 命令如下（摘自源文件注释）：</span><br><span class="hljs-comment"># LATENCY SAMPLES: return time-latency samples for the specified event.</span><br><span class="hljs-comment"># LATENCY LATEST: return the latest latency for all the events classes.</span><br><span class="hljs-comment"># LATENCY DOCTOR: returns an human readable analysis of instance latency.</span><br><span class="hljs-comment"># LATENCY GRAPH: provide an ASCII graph of the latency of the specified event.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># 系统只记录超过设定值的操作，单位是毫秒，0表示禁用该功能</span><br><span class="hljs-comment"># 可以通过命令“CONFIG SET latency-monitor-threshold &lt;milliseconds&gt;” 直接设置而不需要重启redis</span><br> <br>latency-monitor-threshold 0<br> <br><span class="hljs-comment">############################# Event notification ##############################</span><br> <br><span class="hljs-comment"># Redis can notify Pub/Sub clients about events happening in the key space.</span><br><span class="hljs-comment"># This feature is documented at http://redis.io/topics/keyspace-events</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># For instance if keyspace events notification is enabled, and a client</span><br><span class="hljs-comment"># performs a DEL operation on key &quot;foo&quot; stored in the Database 0, two</span><br><span class="hljs-comment"># messages will be published via Pub/Sub:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># PUBLISH __keyspace@0__:foo del</span><br><span class="hljs-comment"># PUBLISH __keyevent@0__:del foo</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># It is possible to select the events that Redis will notify among a set</span><br><span class="hljs-comment"># of classes. Every class is identified by a single character:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  K     Keyspace events, published with __keyspace@&lt;db&gt;__ prefix.</span><br><span class="hljs-comment">#  E     Keyevent events, published with __keyevent@&lt;db&gt;__ prefix.</span><br><span class="hljs-comment">#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...</span><br><span class="hljs-comment">#  $     String commands</span><br><span class="hljs-comment">#  l     List commands</span><br><span class="hljs-comment">#  s     Set commands</span><br><span class="hljs-comment">#  h     Hash commands</span><br><span class="hljs-comment">#  z     Sorted set commands</span><br><span class="hljs-comment">#  x     Expired events (events generated every time a key expires)</span><br><span class="hljs-comment">#  e     Evicted events (events generated when a key is evicted for maxmemory)</span><br><span class="hljs-comment">#  A     Alias for g$lshzxe, so that the &quot;AKE&quot; string means all the events.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  The &quot;notify-keyspace-events&quot; takes as argument a string that is composed</span><br><span class="hljs-comment">#  by zero or multiple characters. The empty string means that notifications</span><br><span class="hljs-comment">#  are disabled at all.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  Example: to enable list and generic events, from the point of view of the</span><br><span class="hljs-comment">#           event name, use:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  notify-keyspace-events Elg</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  Example 2: to get the stream of the expired keys subscribing to channel</span><br><span class="hljs-comment">#             name __keyevent@0__:expired use:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  notify-keyspace-events Ex</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  By default all notifications are disabled because most users don&#x27;t need</span><br><span class="hljs-comment">#  this feature and the feature has some overhead. Note that if you don&#x27;t</span><br><span class="hljs-comment">#  specify at least one of K or E, no events will be delivered.</span><br><span class="hljs-comment"># 事件通知，当事件发生时，redis可以通知Pub/Sub客户端</span><br><span class="hljs-comment"># 空串表示禁用事件通知</span><br><span class="hljs-comment"># 注意：K和E至少要指定一个，否则不会有事件通知</span><br>notify-keyspace-events <span class="hljs-string">&quot;&quot;</span><br> <br><span class="hljs-comment">############################### ADVANCED CONFIG ###############################</span><br> <br><span class="hljs-comment"># Hashes are encoded using a memory efficient data structure when they have a</span><br><span class="hljs-comment"># small number of entries, and the biggest entry does not exceed a given</span><br><span class="hljs-comment"># threshold. These thresholds can be configured using the following directives.</span><br><span class="hljs-comment"># 当hash数目比较少，并且最大元素没有超过给定值时，Hash使用比较有效的内存数据结构来存储。</span><br><span class="hljs-comment"># 即ziplist的结构（压缩的双向链表），参考：http://blog.csdn.net/benbendy1984/article/details/7796956</span><br>hash-max-ziplist-entries 512<br>hash-max-ziplist-value 64<br> <br><span class="hljs-comment"># Similarly to hashes, small lists are also encoded in a special way in order</span><br><span class="hljs-comment"># to save a lot of space. The special representation is only used when</span><br><span class="hljs-comment"># you are under the following limits:</span><br><span class="hljs-comment"># List配置同Hash</span><br>list-max-ziplist-entries 512<br>list-max-ziplist-value 64<br> <br><span class="hljs-comment"># Sets have a special encoding in just one case: when a set is composed</span><br><span class="hljs-comment"># of just strings that happens to be integers in radix 10 in the range</span><br><span class="hljs-comment"># of 64 bit signed integers.</span><br><span class="hljs-comment"># The following configuration setting sets the limit in the size of the</span><br><span class="hljs-comment"># set in order to use this special memory saving encoding.</span><br><span class="hljs-comment"># Sets的元素如果全部是整数（10进制），且为64位有符号整数，则采用特殊的编码方式。</span><br><span class="hljs-comment"># 其元素个数限制配置如下：</span><br>set-max-intset-entries 512<br> <br><span class="hljs-comment"># Similarly to hashes and lists, sorted sets are also specially encoded in</span><br><span class="hljs-comment"># order to save a lot of space. This encoding is only used when the length and</span><br><span class="hljs-comment"># elements of a sorted set are below the following limits:</span><br><span class="hljs-comment"># sorted set 同Hash和List</span><br>zset-max-ziplist-entries 128<br>zset-max-ziplist-value 64<br> <br><span class="hljs-comment"># HyperLogLog sparse representation bytes limit. The limit includes the</span><br><span class="hljs-comment"># 16 bytes header. When an HyperLogLog using the sparse representation crosses</span><br><span class="hljs-comment"># this limit, it is converted into the dense representation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># A value greater than 16000 is totally useless, since at that point the</span><br><span class="hljs-comment"># dense representation is more memory efficient.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># The suggested value is ~ 3000 in order to have the benefits of</span><br><span class="hljs-comment"># the space efficient encoding without slowing down too much PFADD,</span><br><span class="hljs-comment"># which is O(N) with the sparse encoding. The value can be raised to</span><br><span class="hljs-comment"># ~ 10000 when CPU is not a concern, but space is, and the data set is</span><br><span class="hljs-comment"># composed of many HyperLogLogs with cardinality in the 0 - 15000 range.</span><br><span class="hljs-comment"># 关于HyperLogLog的介绍：http://www.redis.io/topics/data-types-intro#hyperloglogs</span><br><span class="hljs-comment"># HyperLogLog稀疏表示限制设置，如果其值大于16000，则仍然采用稠密表示，因为这时稠密表示更能有效使用内存</span><br><span class="hljs-comment"># 建议值为3000</span><br>hll-sparse-max-bytes 3000<br> <br><span class="hljs-comment"># Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in</span><br><span class="hljs-comment"># order to help rehashing the main Redis hash table (the one mapping top-level</span><br><span class="hljs-comment"># keys to values). The hash table implementation Redis uses (see dict.c)</span><br><span class="hljs-comment"># performs a lazy rehashing: the more operation you run into a hash table</span><br><span class="hljs-comment"># that is rehashing, the more rehashing &quot;steps&quot; are performed, so if the</span><br><span class="hljs-comment"># server is idle the rehashing is never complete and some more memory is used</span><br><span class="hljs-comment"># by the hash table.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># The default is to use this millisecond 10 times every second in order to</span><br><span class="hljs-comment"># active rehashing the main dictionaries, freeing memory when possible.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If unsure:</span><br><span class="hljs-comment"># use &quot;activerehashing no&quot; if you have hard latency requirements and it is</span><br><span class="hljs-comment"># not a good thing in your environment that Redis can reply form time to time</span><br><span class="hljs-comment"># to queries with 2 milliseconds delay.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># use &quot;activerehashing yes&quot; if you don&#x27;t have such hard requirements but</span><br><span class="hljs-comment"># want to free memory asap when possible.</span><br><span class="hljs-comment"># 每100毫秒，redis将用1毫秒的时间对Hash表进行重新Hash。</span><br><span class="hljs-comment"># 采用懒惰Hash方式：操作Hash越多，则重新Hash的可能越多，若根本就不操作Hash，则不会重新Hash</span><br><span class="hljs-comment"># 默认每秒10次重新hash主字典，释放可能释放的内存</span><br><span class="hljs-comment"># 重新hash会造成延迟，如果对延迟要求较高，则设为no，禁止重新hash。但可能会浪费很多内存</span><br>activerehashing <span class="hljs-built_in">yes</span><br> <br><span class="hljs-comment"># The client output buffer limits can be used to force disconnection of clients</span><br><span class="hljs-comment"># that are not reading data from the server fast enough for some reason (a</span><br><span class="hljs-comment"># common reason is that a Pub/Sub client can&#x27;t consume messages as fast as the</span><br><span class="hljs-comment"># publisher can produce them).</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The limit can be set differently for the three different classes of clients:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># normal -&gt; normal clients including MONITOR clients</span><br><span class="hljs-comment"># slave  -&gt; slave clients</span><br><span class="hljs-comment"># pubsub -&gt; clients subscribed to at least one pubsub channel or pattern</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The syntax of every client-output-buffer-limit directive is the following:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 客户端输出缓冲区限制，当客户端从服务端的读取速度不够快时，则强制断开</span><br><span class="hljs-comment"># 三种不同的客户端类型：normal、salve、pubsub，语法如下：</span><br><span class="hljs-comment"># client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># A client is immediately disconnected once the hard limit is reached, or if</span><br><span class="hljs-comment"># the soft limit is reached and remains reached for the specified number of</span><br><span class="hljs-comment"># seconds (continuously).</span><br><span class="hljs-comment"># So for instance if the hard limit is 32 megabytes and the soft limit is</span><br><span class="hljs-comment"># 16 megabytes / 10 seconds, the client will get disconnected immediately</span><br><span class="hljs-comment"># if the size of the output buffers reach 32 megabytes, but will also get</span><br><span class="hljs-comment"># disconnected if the client reaches 16 megabytes and continuously overcomes</span><br><span class="hljs-comment"># the limit for 10 seconds.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># By default normal clients are not limited because they don&#x27;t receive data</span><br><span class="hljs-comment"># without asking (in a push way), but just after a request, so only</span><br><span class="hljs-comment"># asynchronous clients may create a scenario where data is requested faster</span><br><span class="hljs-comment"># than it can read.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Instead there is a default limit for pubsub and slave clients, since</span><br><span class="hljs-comment"># subscribers and slaves receive data in a push fashion.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Both the hard or the soft limit can be disabled by setting them to zero.</span><br><span class="hljs-comment"># 当达到硬限制，或者达到软限制且持续了算限制秒数，则立即与客户端断开</span><br><span class="hljs-comment"># 限制设为0表示禁止该功能</span><br><span class="hljs-comment"># 普通用户默认不限制</span><br>client-output-buffer-limit normal 0 0 0<br>client-output-buffer-limit slave 256mb 64mb 60<br>client-output-buffer-limit pubsub 32mb 8mb 60<br> <br><span class="hljs-comment"># Redis calls an internal function to perform many background tasks, like</span><br><span class="hljs-comment"># closing connections of clients in timeout, purging expired keys that are</span><br><span class="hljs-comment"># never requested, and so forth.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Not all tasks are performed with the same frequency, but Redis checks for</span><br><span class="hljs-comment"># tasks to perform accordingly to the specified &quot;hz&quot; value.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># By default &quot;hz&quot; is set to 10. Raising the value will use more CPU when</span><br><span class="hljs-comment"># Redis is idle, but at the same time will make Redis more responsive when</span><br><span class="hljs-comment"># there are many keys expiring at the same time, and timeouts may be</span><br><span class="hljs-comment"># handled with more precision.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The range is between 1 and 500, however a value over 100 is usually not</span><br><span class="hljs-comment"># a good idea. Most users should use the default of 10 and raise this up to</span><br><span class="hljs-comment"># 100 only in environments where very low latency is required.</span><br><span class="hljs-comment"># redis调用内部函数执行的后台任务的频率</span><br><span class="hljs-comment"># 后台任务比如：清除过期数据、客户端超时链接等</span><br><span class="hljs-comment"># 默认为10，取值范围1~500,</span><br><span class="hljs-comment"># 对延迟要求很低的可以设置超过100以上</span><br>hz 10<br> <br><span class="hljs-comment"># When a child rewrites the AOF file, if the following option is enabled</span><br><span class="hljs-comment"># the file will be fsync-ed every 32 MB of data generated. This is useful</span><br><span class="hljs-comment"># in order to commit the file to the disk more incrementally and avoid</span><br><span class="hljs-comment"># big latency spikes.</span><br><span class="hljs-comment"># 当修改AOF文件时，该设置为yes，则每生成32MB的数据，就进行同步</span><br>aof-rewrite-incremental-fsync <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装配置 </tag>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim简单配置</title>
      <link href="/2022/09/23/Vim%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/09/23/Vim%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h1><p>下载主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/flazz/vim-colorschemes.git ~/.vim<br></code></pre></td></tr></table></figure><span id="more"></span><p>编辑 <code>~/.vimrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> tabstop=4<br><span class="hljs-built_in">set</span> softtabstop=4<br><span class="hljs-built_in">set</span> shiftwidth=4<br><span class="hljs-built_in">set</span> expandtab<br><span class="hljs-built_in">set</span> autoindent<br><span class="hljs-built_in">set</span> cindent<br><span class="hljs-built_in">set</span> cinoptions=&#123;0,1s,t0,n-2,p2s,(03s,=.5s,&gt;1s,=1s,:1s<br><span class="hljs-built_in">set</span> nu<br><span class="hljs-built_in">set</span> ts=4<br>colorscheme 256-jungle<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h3 id="我是-leo"><a href="#我是-leo" class="headerlink" title="我是 leo"></a>我是 leo</h3><p>详细信息</p><p>python golang</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>读书</title>
      <link href="/reading/index.html"/>
      <url>/reading/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
